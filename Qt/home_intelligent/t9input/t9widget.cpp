#include "t9widget.h"
#include "ui_t9widget.h"
#include <QPushButton>
#include <QTextCodec>
#include <QKeyEvent>
#include <QBitmap>
//#include <QDebug>

// Generate By PIC to RAW Conveter, By Leajian
namespace RAWRES {
    const unsigned char RES_NUM0_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num0.png */
            /* File Size: 227 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x20, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x4d, 0x58, 0xbb, 0x91, 0x2a,
    /*0x90*/	0x24, 0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58,  0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
    /*0xa0*/	0x6e, 0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31,  0x32, 0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03,
    /*0xb0*/	0x58, 0xcb, 0x2a, 0x00, 0x00, 0x00, 0x18, 0x49,  0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x60, 0x40,
    /*0xc0*/	0x05, 0x12, 0x20, 0x42, 0x05, 0x44, 0x38, 0xe1,  0x22, 0x54, 0xe0, 0xea, 0x68, 0x01, 0x00, 0xc0,
    /*0xd0*/	0x2b, 0x01, 0xc3, 0x50, 0xf7, 0x67, 0x91, 0x00,  0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    /*0xe0*/	0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM1_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num1.png */
            /* File Size: 226 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x20, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x4d, 0x58, 0xbb, 0x91, 0x2a,
    /*0x90*/	0x24, 0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58,  0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f,
    /*0xa0*/	0x6e, 0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31,  0x32, 0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03,
    /*0xb0*/	0x58, 0xcb, 0x2a, 0x00, 0x00, 0x00, 0x17, 0x49,  0x44, 0x41, 0x54, 0x78, 0x9c, 0x63, 0x60, 0x40,
    /*0xc0*/	0x05, 0x1c, 0x20, 0xc2, 0x02, 0xce, 0xc2, 0x49,  0xd8, 0x31, 0xd0, 0x08, 0x00, 0x00, 0x49, 0x3f,
    /*0xd0*/	0x00, 0xaf, 0x2e, 0x16, 0xa9, 0x92, 0x00, 0x00,  0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    /*0xe0*/	0x60, 0x82,
    };
    const unsigned char RES_NUM2_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num2.png */
            /* File Size: 275 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x44, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0x98, 0x16, 0x40,  0x19, 0x1c, 0x1c, 0xe8, 0x0c, 0x06, 0x38, 0x43,
    /*0xd0*/	0x01, 0xc6, 0x68, 0x80, 0xe9, 0x62, 0x40, 0x57,  0xcc, 0xb5, 0x02, 0x8f, 0x25, 0x78, 0x41, 0x00,
    /*0xe0*/	0x8c, 0x21, 0x80, 0xce, 0x08, 0x10, 0x65, 0x08,  0x01, 0xd1, 0x8c, 0x2c, 0x02, 0x8e, 0x2c, 0x60,
    /*0xf0*/	0x91, 0x10, 0x01, 0x47, 0x06, 0x98, 0x08, 0x44,  0x4d, 0x28, 0x54, 0x0d, 0x41, 0x00, 0x00, 0x73,
    /*0x100*/	0x51, 0x05, 0x6b, 0xbc, 0x7d, 0xc5, 0x49, 0x00,  0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    /*0x110*/	0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM3_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num3.png */
            /* File Size: 275 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x44, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0x98, 0x16, 0x40,  0x19, 0x1c, 0x1c, 0xe8, 0x0c, 0x06, 0x98, 0x14,
    /*0xd0*/	0x03, 0x07, 0x3a, 0x03, 0x53, 0x31, 0xdc, 0x1c,  0x52, 0x81, 0x08, 0x03, 0x83, 0x28, 0x98, 0xc1,
    /*0xe0*/	0xc2, 0xc0, 0xe0, 0x80, 0xca, 0x08, 0x61, 0x65,  0x0c, 0x01, 0xd1, 0x8c, 0x2c, 0x02, 0x0e, 0x0e,
    /*0xf0*/	0x10, 0x86, 0x28, 0x8c, 0x21, 0x00, 0x55, 0x13,  0xca, 0xea, 0x18, 0x42, 0x94, 0x3d, 0x00, 0xa5,
    /*0x100*/	0xbd, 0x06, 0x07, 0xdb, 0xbf, 0x71, 0xe8, 0x00,  0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    /*0x110*/	0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM4_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num4.png */
            /* File Size: 279 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x48, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x04, 0x0a, 0x18, 0x8c,  0x05, 0x50, 0x9a, 0x09, 0x26, 0xc2, 0x81, 0xc1,
    /*0xd0*/	0x50, 0x80, 0x31, 0xb8, 0x56, 0x60, 0x68, 0x87,  0x8b, 0x90, 0x0a, 0x02, 0x18, 0x1c, 0x20, 0x0c,
    /*0xe0*/	0x01, 0x98, 0x08, 0x8c, 0x11, 0x2a, 0xca, 0x08,  0x96, 0x62, 0x64, 0x11, 0x70, 0x80, 0xa8, 0x09,
    /*0xf0*/	0x80, 0x32, 0x18, 0x19, 0x60, 0x8c, 0x90, 0x90,  0xc0, 0x00, 0x30, 0x83, 0x11, 0xa6, 0x3b, 0x04,
    /*0x100*/	0xbb, 0x35, 0x00, 0x71, 0x38, 0x08, 0x0e, 0xfc,  0x98, 0xab, 0x89, 0x00, 0x00, 0x00, 0x00, 0x49,
    /*0x110*/	0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM5_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num5.png */
            /* File Size: 275 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x44, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0xb8, 0x56, 0x40,  0x19, 0x1c, 0x0c, 0xe8, 0x0c, 0xae, 0x05, 0x30,
    /*0xd0*/	0x11, 0x0c, 0x39, 0x0e, 0x0c, 0x06, 0x13, 0x4c,  0x31, 0xa9, 0x40, 0x20, 0x80, 0xd5, 0x01, 0xca,
    /*0xe0*/	0x62, 0x40, 0x63, 0x04, 0x08, 0x06, 0x40, 0x18,  0x02, 0x82, 0x50, 0x11, 0x01, 0x51, 0x18, 0x43,
    /*0xf0*/	0xc0, 0x01, 0xca, 0x08, 0x09, 0x0d, 0x81, 0x6a,  0x82, 0x00, 0x98, 0x69, 0xe8, 0x00, 0x00, 0x04,
    /*0x100*/	0x24, 0x07, 0x45, 0x6c, 0x66, 0x29, 0x96, 0x00,  0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    /*0x110*/	0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM6_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num6.png */
            /* File Size: 262 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x37, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0x98, 0x56, 0x40,  0x19, 0x1c, 0x1c, 0x50, 0x86, 0x02, 0x4c, 0x4a,
    /*0xd0*/	0x69, 0x01, 0x94, 0xa1, 0x01, 0x97, 0xc2, 0xcd,  0xe0, 0x82, 0x29, 0xa6, 0x1e, 0x60, 0x0d, 0x08,
    /*0xe0*/	0x65, 0x08, 0x00, 0x31, 0x58, 0x5c, 0x04, 0x1c,  0x59, 0x70, 0x31, 0x42, 0x02, 0x02, 0x88, 0x32,
    /*0xf0*/	0x0d, 0x00, 0x28, 0x07, 0x06, 0xfc, 0xab, 0x02,  0xf8, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    /*0x100*/	0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM7_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num7.png */
            /* File Size: 274 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x43, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0xb8, 0x56, 0x40,  0x19, 0x1c, 0x1c, 0x30, 0x86, 0x02, 0x4c, 0x0e,
    /*0xd0*/	0xce, 0x68, 0x20, 0x85, 0x41, 0x2d, 0x10, 0xca,  0x10, 0x12, 0xe8, 0x18, 0x02, 0x64, 0x08, 0x38,
    /*0xe0*/	0xb2, 0x88, 0x30, 0x32, 0x40, 0x18, 0x02, 0x0c,  0x01, 0x30, 0x06, 0x0b, 0x90, 0x21, 0xca, 0x10,
    /*0xf0*/	0x12, 0xc2, 0x08, 0x56, 0x03, 0xe6, 0x02, 0x41,  0x08, 0x50, 0x0c, 0x2b, 0x00, 0x00, 0xb1, 0x3d,
    /*0x100*/	0x08, 0x31, 0x8e, 0xaa, 0x11, 0x17, 0x00, 0x00,  0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    /*0x110*/	0x60, 0x82,
    };
    const unsigned char RES_NUM8_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num8.png */
            /* File Size: 264 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x39, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0xb8, 0x16, 0x40,  0x19, 0x0a, 0x1c, 0xe8, 0x0c, 0x0e, 0x05, 0xc2,
    /*0xd0*/	0x6a, 0xe0, 0x0c, 0xb8, 0x1a, 0xb2, 0x81, 0x03,  0x3a, 0x83, 0x31, 0x20, 0xd0, 0xd5, 0x15, 0x22,
    /*0xe0*/	0x22, 0xe0, 0xc8, 0x02, 0x63, 0x08, 0x40, 0x19,  0x0e, 0x01, 0x60, 0x86, 0x08, 0x6b, 0x00, 0x5c,
    /*0xf0*/	0x23, 0x5e, 0x00, 0x00, 0x55, 0x3e, 0x07, 0x5a,  0x15, 0x49, 0x52, 0x1a, 0x00, 0x00, 0x00, 0x00,
    /*0x100*/	0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_NUM9_PNG[] = {
            /* Source File: E:\SmartHome\Qt_Test_Project\T9_Test\pic\num9.png */
            /* File Size: 285 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x02, 0x03, 0x00, 0x00, 0x00, 0x2b, 0xfd, 0x8f,
    /*0x20*/	0x9c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x09, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x66, 0x66, 0x66, 0x00, 0x00,
    /*0x40*/	0x00, 0xa8, 0xc3, 0x6f, 0x28, 0x00, 0x00, 0x00,  0x03, 0x74, 0x52, 0x4e, 0x53, 0x00, 0xff, 0xff,
    /*0x50*/	0x44, 0x50, 0xd6, 0x21, 0x00, 0x00, 0x00, 0x09,  0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x00, 0x00, 0x0b, 0x12, 0x01, 0xd2, 0xdd, 0x7e,  0xfc, 0x00, 0x00, 0x00, 0x20, 0x74, 0x45, 0x58,
    /*0x70*/	0x74, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,  0x65, 0x00, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d,
    /*0x80*/	0x65, 0x64, 0x69, 0x61, 0x20, 0x46, 0x69, 0x72,  0x65, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x4d,
    /*0x90*/	0x58, 0xbb, 0x91, 0x2a, 0x24, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0xa0*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0xb0*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x4e, 0x49, 0x44, 0x41, 0x54, 0x78,
    /*0xc0*/	0x9c, 0x63, 0x60, 0xc0, 0x0d, 0xb8, 0x16, 0x40,  0x19, 0x0a, 0x1c, 0xb8, 0x19, 0x1a, 0x30, 0xc5,
    /*0xd0*/	0x1d, 0x30, 0x6d, 0x70, 0x29, 0x05, 0x28, 0x43,  0xab, 0x01, 0x8f, 0x25, 0x64, 0x01, 0x17, 0x57,
    /*0xe0*/	0x91, 0x90, 0xc0, 0x10, 0x10, 0xc3, 0x51, 0x40,  0xc0, 0x41, 0x00, 0xc8, 0x10, 0x65, 0x70, 0x10,
    /*0xf0*/	0x64, 0x70, 0x00, 0x32, 0x04, 0x19, 0x05, 0x58,  0x21, 0x0c, 0x56, 0x11, 0x16, 0xc6, 0x10, 0x88,
    /*0x100*/	0x7a, 0x16, 0x98, 0xc6, 0x00, 0xac, 0xc6, 0x01,  0x00, 0x4a, 0xef, 0x07, 0x5e, 0x97, 0xe5, 0x9e,
    /*0x110*/	0x73, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,  0x44, 0xae, 0x42, 0x60, 0x82,
    };
    struct RESINFO {
        const unsigned char *pic;
        const long size;
    } numMap[] = {
        { RES_NUM0_PNG, sizeof(RES_NUM0_PNG) },
        { RES_NUM1_PNG, sizeof(RES_NUM1_PNG) },
        { RES_NUM2_PNG, sizeof(RES_NUM2_PNG) },
        { RES_NUM3_PNG, sizeof(RES_NUM3_PNG) },
        { RES_NUM4_PNG, sizeof(RES_NUM4_PNG) },
        { RES_NUM5_PNG, sizeof(RES_NUM5_PNG) },
        { RES_NUM6_PNG, sizeof(RES_NUM6_PNG) },
        { RES_NUM7_PNG, sizeof(RES_NUM7_PNG) },
        { RES_NUM8_PNG, sizeof(RES_NUM8_PNG) },
        { RES_NUM9_PNG, sizeof(RES_NUM9_PNG) },
    };

    const unsigned char RES_SYS0_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys0.png */
            /* File Size: 243 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x29, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x19,
    /*0xc0*/	0xb0, 0x1f, 0x00, 0x12, 0x8c, 0x0c, 0x70, 0x42,  0x9a, 0x1f, 0x48, 0xf0, 0x4c, 0x04, 0x12, 0x1c,
    /*0xd0*/	0x3d, 0x20, 0xa2, 0x09, 0x44, 0x00, 0xb9, 0xec,  0x77, 0xef, 0x91, 0x6e, 0x38, 0x03, 0x00, 0x4a,
    /*0xe0*/	0x8d, 0x05, 0x0f, 0xa5, 0x77, 0x7b, 0xc4, 0x00,  0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    /*0xf0*/	0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS1_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys1.png */
            /* File Size: 253 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x33, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x19,
    /*0xc0*/	0x94, 0x1b, 0xde, 0xff, 0xc0, 0xa0, 0xe4, 0x71,  0x53, 0x80, 0x41, 0xa9, 0xe5, 0x26, 0x03, 0x88,
    /*0xd0*/	0x50, 0x60, 0xb0, 0x6b, 0x59, 0xf9, 0x00, 0xc8,  0x5a, 0xa9, 0x00, 0x22, 0x80, 0x62, 0x1e, 0x2b,
    /*0xe0*/	0x05, 0x80, 0xea, 0xd6, 0x7f, 0x20, 0xdd, 0x74,  0x00, 0x60, 0x1b, 0x0f, 0x5c, 0xae, 0x66, 0xe8,
    /*0xf0*/	0xbf, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,  0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS2_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys2.png */
            /* File Size: 226 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x18, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x16,
    /*0xc0*/	0xb0, 0xc0, 0x09, 0x3e, 0x10, 0x21, 0x8a, 0x2a,  0x46, 0x2c, 0x41, 0x10, 0x00, 0x00, 0x19, 0x77,
    /*0xd0*/	0x00, 0x54, 0x93, 0x27, 0xa9, 0x0a, 0x00, 0x00,  0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    /*0xe0*/	0x60, 0x82,
    };
    const unsigned char RES_SYS3_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys3.png */
            /* File Size: 256 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x36, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x19,
    /*0xc0*/	0xd4, 0x30, 0xde, 0x61, 0x60, 0x50, 0x62, 0xe8,  0x80, 0x11, 0x36, 0xdd, 0x0f, 0x18, 0x6c, 0x3c,
    /*0xd0*/	0x3a, 0x05, 0x18, 0x14, 0xc0, 0x84, 0x01, 0x88,  0x70, 0x00, 0x12, 0x05, 0x15, 0x85, 0x0f, 0x18,
    /*0xe0*/	0x18, 0x5c, 0x18, 0x81, 0x5a, 0x2c, 0x98, 0x1b,  0x88, 0x35, 0x1d, 0x00, 0x1c, 0x2d, 0x0b, 0xb0,
    /*0xf0*/	0x37, 0x7b, 0x40, 0x58, 0x00, 0x00, 0x00, 0x00,  0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS4_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys4.png */
            /* File Size: 228 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x1a, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0xa0, 0x18,
    /*0xc0*/	0x28, 0x80, 0x88, 0x03, 0x40, 0xcc, 0xf8, 0xff,  0x07, 0x94, 0x05, 0x11, 0x23, 0x0b, 0x00, 0x00,
    /*0xd0*/	0xfc, 0x7a, 0x03, 0xb9, 0x8d, 0x2d, 0x7c, 0xb7,  0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    /*0xe0*/	0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS5_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys5.png */
            /* File Size: 248 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x2e, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x19,
    /*0xc0*/	0xf0, 0x3f, 0x30, 0x60, 0x60, 0xe0, 0x54, 0x10,  0x60, 0x60, 0x60, 0x64, 0x00, 0x11, 0xec, 0x72,
    /*0xd0*/	0x40, 0x82, 0x63, 0x22, 0x90, 0x60, 0x06, 0x11,  0x2c, 0x13, 0xa1, 0x5c, 0xe6, 0xf6, 0x7b, 0xa4,
    /*0xe0*/	0x1b, 0xce, 0x00, 0x00, 0x6f, 0xf7, 0x05, 0x57,  0xf2, 0xb5, 0xf1, 0x80, 0x00, 0x00, 0x00, 0x00,
    /*0xf0*/	0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS6_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys6.png */
            /* File Size: 228 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x1a, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0xa0, 0x1c,
    /*0xc0*/	0x38, 0x80, 0x08, 0x03, 0x06, 0x06, 0xc6, 0xff,  0x3f, 0xa0, 0x2c, 0xa8, 0x18, 0x39, 0x00, 0x00,
    /*0xd0*/	0xc0, 0x1a, 0x02, 0xd9, 0xb3, 0x69, 0x4c, 0x9a,  0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    /*0xe0*/	0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS7_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys7.png */
            /* File Size: 250 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x30, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x19,
    /*0xc0*/	0xf0, 0x1f, 0x60, 0x66, 0x60, 0x60, 0x71, 0x60,  0x04, 0x12, 0x0c, 0x20, 0x62, 0x36, 0x3f, 0x03,
    /*0xd0*/	0x03, 0x7b, 0xcf, 0x44, 0x20, 0xab, 0x03, 0x44,  0x70, 0x80, 0x08, 0x0f, 0x20, 0xc1, 0x7f, 0xf7,
    /*0xe0*/	0x7c, 0x03, 0xe9, 0xa6, 0x03, 0x00, 0x05, 0x4e,  0x07, 0xc1, 0x75, 0xf7, 0x47, 0x00, 0x00, 0x00,
    /*0xf0*/	0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,  0x60, 0x82,
    };
    const unsigned char RES_SYS8_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys8.png */
            /* File Size: 224 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x16, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x16,
    /*0xc0*/	0xb0, 0x90, 0x47, 0x88, 0x82, 0x08, 0x3e, 0x54,  0x31, 0x7c, 0x00, 0x00, 0x15, 0x5f, 0x00, 0x58,
    /*0xd0*/	0x57, 0x2f, 0x90, 0x75, 0x00, 0x00, 0x00, 0x00,  0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_SYS9_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\sys9.png */
            /* File Size: 261 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x1f, 0x74, 0x45, 0x58, 0x74, 0x53, 0x6f, 0x66,
    /*0x70*/	0x74, 0x77, 0x61, 0x72, 0x65, 0x00, 0x4d, 0x61,  0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64, 0x69, 0x61,
    /*0x80*/	0x20, 0x46, 0x69, 0x72, 0x65, 0x77, 0x6f, 0x72,  0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68, 0xd2, 0x78,
    /*0x90*/	0x00, 0x00, 0x00, 0x16, 0x74, 0x45, 0x58, 0x74,  0x43, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e,
    /*0xa0*/	0x20, 0x54, 0x69, 0x6d, 0x65, 0x00, 0x31, 0x32,  0x2f, 0x32, 0x36, 0x2f, 0x31, 0x30, 0x03, 0x58,
    /*0xb0*/	0xcb, 0x2a, 0x00, 0x00, 0x00, 0x3b, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x20, 0x19,
    /*0xc0*/	0xd4, 0x30, 0x3e, 0x60, 0x60, 0x50, 0x62, 0x98,  0x00, 0x22, 0x3a, 0x80, 0x84, 0x4d, 0x77, 0x02,
    /*0xd0*/	0x83, 0x8d, 0x47, 0xe7, 0x04, 0x06, 0x05, 0x8f,  0x4e, 0x01, 0x06, 0x05, 0x03, 0x10, 0xe1, 0x30,
    /*0xe0*/	0x51, 0x80, 0xa1, 0xa0, 0xf2, 0xf1, 0x0e, 0x06,  0x06, 0x17, 0x90, 0x16, 0x0b, 0xe2, 0x4d, 0x07,
    /*0xf0*/	0x00, 0x19, 0xd5, 0x0b, 0x8b, 0x1a, 0x26, 0x79,  0x38, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    /*0x100*/	0x44, 0xae, 0x42, 0x60, 0x82,
    };
    RESINFO sysMap[] = {
        { RES_SYS0_PNG, sizeof(RES_SYS0_PNG) },
        { RES_SYS1_PNG, sizeof(RES_SYS1_PNG) },
        { RES_SYS2_PNG, sizeof(RES_SYS2_PNG) },
        { RES_SYS3_PNG, sizeof(RES_SYS3_PNG) },
        { RES_SYS4_PNG, sizeof(RES_SYS4_PNG) },
        { RES_SYS5_PNG, sizeof(RES_SYS5_PNG) },
        { RES_SYS6_PNG, sizeof(RES_SYS6_PNG) },
        { RES_SYS7_PNG, sizeof(RES_SYS7_PNG) },
        { RES_SYS8_PNG, sizeof(RES_SYS8_PNG) },
        { RES_SYS9_PNG, sizeof(RES_SYS9_PNG) },
    };
#if 0
    const unsigned char RES_1_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\1.png */
            /* File Size: 225 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0x70*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0x80*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x1f, 0x74, 0x45, 0x58, 0x74, 0x53,
    /*0x90*/	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00,  0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64,
    /*0xa0*/	0x69, 0x61, 0x20, 0x46, 0x69, 0x72, 0x65, 0x77,  0x6f, 0x72, 0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68,
    /*0xb0*/	0xd2, 0x78, 0x00, 0x00, 0x00, 0x17, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x40, 0x05,
    /*0xc0*/	0x1c, 0x20, 0xc2, 0x02, 0xce, 0xc2, 0x49, 0xd8,  0x31, 0xd0, 0x08, 0x00, 0x00, 0x49, 0x3f, 0x00,
    /*0xd0*/	0xaf, 0x63, 0xc2, 0xcd, 0xb6, 0x00, 0x00, 0x00,  0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
    /*0xe0*/	0x82,
    };
    const unsigned char RES_2_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\2.png */
            /* File Size: 233 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0x70*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0x80*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x1f, 0x74, 0x45, 0x58, 0x74, 0x53,
    /*0x90*/	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00,  0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64,
    /*0xa0*/	0x69, 0x61, 0x20, 0x46, 0x69, 0x72, 0x65, 0x77,  0x6f, 0x72, 0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68,
    /*0xb0*/	0xd2, 0x78, 0x00, 0x00, 0x00, 0x1f, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x40, 0x05,
    /*0xc0*/	0x32, 0x20, 0x42, 0x09, 0x4e, 0x30, 0x81, 0x08,  0x16, 0x10, 0xc1, 0x01, 0x22, 0x04, 0xe0, 0x12,
    /*0xd0*/	0x76, 0x0c, 0x34, 0x02, 0x00, 0x5d, 0x05, 0x00,  0xdf, 0x98, 0xaf, 0x62, 0x2c, 0x00, 0x00, 0x00,
    /*0xe0*/	0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,  0x82,
    };
    const unsigned char RES_3_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\3.png */
            /* File Size: 230 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0x70*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0x80*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x1f, 0x74, 0x45, 0x58, 0x74, 0x53,
    /*0x90*/	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00,  0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64,
    /*0xa0*/	0x69, 0x61, 0x20, 0x46, 0x69, 0x72, 0x65, 0x77,  0x6f, 0x72, 0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68,
    /*0xb0*/	0xd2, 0x78, 0x00, 0x00, 0x00, 0x1c, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x40, 0x05,
    /*0xc0*/	0x32, 0x20, 0x42, 0x09, 0x4e, 0xf0, 0x80, 0x08,  0x26, 0x38, 0x81, 0x90, 0x90, 0x61, 0xa0, 0x11,
    /*0xd0*/	0x00, 0x00, 0x59, 0x53, 0x00, 0xd1, 0x72, 0x67,  0xb9, 0x83, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    /*0xe0*/	0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
    const unsigned char RES_4_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\4.png */
            /* File Size: 233 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0x70*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0x80*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x1f, 0x74, 0x45, 0x58, 0x74, 0x53,
    /*0x90*/	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00,  0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64,
    /*0xa0*/	0x69, 0x61, 0x20, 0x46, 0x69, 0x72, 0x65, 0x77,  0x6f, 0x72, 0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68,
    /*0xb0*/	0xd2, 0x78, 0x00, 0x00, 0x00, 0x1f, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x80, 0x03,
    /*0xc0*/	0x16, 0x38, 0xc1, 0x03, 0x22, 0x44, 0x40, 0x84,  0x0a, 0x9c, 0x70, 0x01, 0x11, 0x76, 0x70, 0x25,
    /*0xd0*/	0x7c, 0x0c, 0x34, 0x02, 0x00, 0x6d, 0x15, 0x01,  0x05, 0x95, 0x9e, 0x71, 0x7d, 0x00, 0x00, 0x00,
    /*0xe0*/	0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,  0x82,
    };
    const unsigned char RES_5_PNG[] = {
            /* Source File: F:\My_Qt_Projects\T9_Test\pic\5.png */
            /* File Size: 232 Bytes */
            /* File Format: 原始文件,不做格式转换 */

    /*0x0*/	0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,  0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
    /*0x10*/	0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x1d,  0x01, 0x03, 0x00, 0x00, 0x00, 0x6c, 0x5d, 0xf5,
    /*0x20*/	0x4c, 0x00, 0x00, 0x00, 0x03, 0x73, 0x42, 0x49,  0x54, 0x08, 0x08, 0x08, 0xdb, 0xe1, 0x4f, 0xe0,
    /*0x30*/	0x00, 0x00, 0x00, 0x06, 0x50, 0x4c, 0x54, 0x45,  0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x55, 0xc2,
    /*0x40*/	0xd3, 0x7e, 0x00, 0x00, 0x00, 0x02, 0x74, 0x52,  0x4e, 0x53, 0x00, 0xff, 0x5b, 0x91, 0x22, 0xb5,
    /*0x50*/	0x00, 0x00, 0x00, 0x09, 0x70, 0x48, 0x59, 0x73,  0x00, 0x00, 0x0b, 0x12, 0x00, 0x00, 0x0b, 0x12,
    /*0x60*/	0x01, 0xd2, 0xdd, 0x7e, 0xfc, 0x00, 0x00, 0x00,  0x16, 0x74, 0x45, 0x58, 0x74, 0x43, 0x72, 0x65,
    /*0x70*/	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x54, 0x69,  0x6d, 0x65, 0x00, 0x31, 0x32, 0x2f, 0x32, 0x36,
    /*0x80*/	0x2f, 0x31, 0x30, 0x03, 0x58, 0xcb, 0x2a, 0x00,  0x00, 0x00, 0x1f, 0x74, 0x45, 0x58, 0x74, 0x53,
    /*0x90*/	0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x00,  0x4d, 0x61, 0x63, 0x72, 0x6f, 0x6d, 0x65, 0x64,
    /*0xa0*/	0x69, 0x61, 0x20, 0x46, 0x69, 0x72, 0x65, 0x77,  0x6f, 0x72, 0x6b, 0x73, 0x20, 0x38, 0xb5, 0x68,
    /*0xb0*/	0xd2, 0x78, 0x00, 0x00, 0x00, 0x1e, 0x49, 0x44,  0x41, 0x54, 0x08, 0x99, 0x63, 0x60, 0x40, 0x05,
    /*0xc0*/	0x76, 0x20, 0x42, 0x01, 0x4e, 0xd8, 0x80, 0x08,  0x25, 0x10, 0xc1, 0x04, 0x67, 0x81, 0x09, 0x19,
    /*0xd0*/	0x06, 0x1a, 0x01, 0x00, 0x8b, 0x8f, 0x01, 0x3f,  0xcd, 0x33, 0x02, 0x31, 0x00, 0x00, 0x00, 0x00,
    /*0xe0*/	0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82,
    };
#endif
}
// End of Generation

namespace T9MAP {
    const unsigned char PY_mb_space [] = { "" };
    const unsigned char PY_mb_symbol[] = {"，。、《》？；：【】！・￥……（）――"};
    const unsigned char PY_mb_a     [] = { "啊阿" };
    const unsigned char PY_mb_ai    [] = { "爱挨碍哎埃矮艾唉哀癌皑蔼隘" };
    const unsigned char PY_mb_an    [] = { "按安暗案鞍俺岸氨胺" };
    const unsigned char PY_mb_ang   [] = { "昂盎肮" };
    const unsigned char PY_mb_ao    [] = { "傲凹敖熬奥翱袄懊澳" };
    const unsigned char PY_mb_ba    [] = { "八把巴爸罢霸拔扒吧坝芭疤捌笆跋叭靶" };
    const unsigned char PY_mb_bai   [] = { "白百摆败拜佰柏稗" };
    const unsigned char PY_mb_ban   [] = { "办半班般伴板版搬拌扮颁扳斑绊瓣" };
    const unsigned char PY_mb_bang  [] = { "邦帮绑傍榜镑膀棒谤磅蚌梆" };
    const unsigned char PY_mb_bao   [] = { "包保宝报抱饱暴爆胞薄褒雹堡豹苞鲍剥瀑" };
    const unsigned char PY_mb_bei   [] = { "卑杯悲碑北贝狈备背钡倍被惫焙辈" };
    const unsigned char PY_mb_ben   [] = { "奔本苯笨夯" };
    const unsigned char PY_mb_beng  [] = { "崩绷甭泵迸蹦" };
    const unsigned char PY_mb_bi    [] = { "逼鼻比彼笔鄙币必毕闭庇毖陛毙敝痹蓖弊碧蔽壁避臂" };
    const unsigned char PY_mb_bian  [] = { "边编鞭贬扁卞便变遍辨辩辫" };
    const unsigned char PY_mb_biao  [] = { "彪标膘表" };
    const unsigned char PY_mb_bie   [] = { "憋鳖别瘪" };
    const unsigned char PY_mb_bin   [] = { "宾彬斌滨濒摈" };
    const unsigned char PY_mb_bing  [] = { "冰兵丙秉柄炳饼并病" };
    const unsigned char PY_mb_bo    [] = { "拨波玻钵脖菠播伯驳帛泊勃铂舶博渤搏箔膊卜" };
    const unsigned char PY_mb_bu    [] = { "补哺捕不布步怖部埠簿" };
    const unsigned char PY_mb_ca    [] = { "擦" };
    const unsigned char PY_mb_cai   [] = { "猜才材财裁采彩睬踩菜蔡" };
    const unsigned char PY_mb_can   [] = { "参餐残蚕惭惨灿" };
    const unsigned char PY_mb_cang  [] = { "仓沧苍舱藏" };
    const unsigned char PY_mb_cao   [] = { "操糙曹槽草" };
    const unsigned char PY_mb_ce    [] = { "册侧厕测策" };
    const unsigned char PY_mb_ceng  [] = { "层蹭曾" };
    const unsigned char PY_mb_cha   [] = { "叉插查茬茶搽察碴岔诧差刹" };
    const unsigned char PY_mb_chai  [] = { "拆柴豺" };
    const unsigned char PY_mb_chan  [] = { "掺搀谗馋缠蝉产铲阐颤" };
    const unsigned char PY_mb_chang [] = { "昌猖肠尝偿常厂场敞畅倡唱" };
    const unsigned char PY_mb_chao  [] = { "抄钞超巢朝嘲潮吵炒绰" };
    const unsigned char PY_mb_che   [] = { "车扯彻掣撤澈" };
    const unsigned char PY_mb_chen  [] = { "郴尘臣忱沉辰陈晨衬趁" };
    const unsigned char PY_mb_cheng [] = { "称撑成呈承诚城乘惩程澄橙逞骋秤" };
    const unsigned char PY_mb_chi   [] = { "吃痴弛池驰迟持尺侈齿耻斥赤炽翅" };
    const unsigned char PY_mb_chong [] = { "充冲虫崇宠" };
    const unsigned char PY_mb_chou  [] = { "抽仇绸畴愁稠筹酬踌丑瞅臭" };
    const unsigned char PY_mb_chu   [] = { "出初除厨滁锄雏橱躇础储楚处搐触矗畜" };
    const unsigned char PY_mb_chuai [] = { "揣" };
    const unsigned char PY_mb_chuan [] = { "川穿传船椽喘串" };
    const unsigned char PY_mb_chuang[] = { "闯疮窗床创" };
    const unsigned char PY_mb_chui  [] = { "吹炊垂捶锤" };
    const unsigned char PY_mb_chun  [] = { "春椿纯唇淳醇蠢" };
    const unsigned char PY_mb_chuo  [] = { "戳" };
    const unsigned char PY_mb_ci    [] = { "疵词茨瓷慈辞磁雌此次刺赐" };
    const unsigned char PY_mb_cong  [] = { "囱从匆葱聪丛" };
    const unsigned char PY_mb_cou   [] = { "凑" };
    const unsigned char PY_mb_cu    [] = { "粗促醋簇" };
    const unsigned char PY_mb_cuan  [] = { "蹿窜篡" };
    const unsigned char PY_mb_cui   [] = { "崔催摧脆淬瘁粹翠" };
    const unsigned char PY_mb_cun   [] = { "村存寸" };
    const unsigned char PY_mb_cuo   [] = { "搓磋撮挫措错" };
    const unsigned char PY_mb_da    [] = { "搭达答瘩打大" };
    const unsigned char PY_mb_dai   [] = { "呆歹傣代带待怠殆贷袋逮戴" };
    const unsigned char PY_mb_dan   [] = { "丹单担耽郸胆掸旦但诞弹惮淡蛋氮" };
    const unsigned char PY_mb_dang  [] = { "当挡党荡档" };
    const unsigned char PY_mb_dao   [] = { "刀导岛倒捣祷蹈到悼盗道稻" };
    const unsigned char PY_mb_de    [] = { "得德的" };
    const unsigned char PY_mb_deng  [] = { "灯登蹬等邓凳瞪" };
    const unsigned char PY_mb_di    [] = { "低堤滴狄迪敌涤笛嫡底抵地弟帝递第缔蒂" };
    const unsigned char PY_mb_dian  [] = { "掂滇颠典点碘电佃甸店垫惦淀奠殿靛" };
    const unsigned char PY_mb_diao  [] = { "刁叼凋碉雕吊钓掉" };
    const unsigned char PY_mb_die   [] = { "爹跌迭谍叠碟蝶" };
    const unsigned char PY_mb_ding  [] = { "丁叮盯钉顶鼎订定锭" };
    const unsigned char PY_mb_diu   [] = { "丢" };
    const unsigned char PY_mb_dong  [] = { "东冬董懂动冻侗恫栋洞" };
    const unsigned char PY_mb_dou   [] = { "都兜斗抖陡豆逗痘" };
    const unsigned char PY_mb_du    [] = { "督毒读犊独堵赌睹妒杜肚度渡镀" };
    const unsigned char PY_mb_duan  [] = { "端短段断缎锻" };
    const unsigned char PY_mb_dui   [] = { "堆队对兑" };
    const unsigned char PY_mb_dun   [] = { "吨敦墩蹲盾钝顿遁" };
    const unsigned char PY_mb_duo   [] = { "多哆夺掇朵垛躲剁堕舵惰跺" };
    const unsigned char PY_mb_e     [] = { "讹俄娥峨鹅蛾额厄扼恶饿鄂遏" };
    const unsigned char PY_mb_en    [] = { "恩" };
    const unsigned char PY_mb_er    [] = { "儿而尔耳洱饵二贰" };
    const unsigned char PY_mb_fa    [] = { "发乏伐罚阀筏法珐" };
    const unsigned char PY_mb_fan   [] = { "帆番翻藩凡矾钒烦樊繁反返犯泛饭范贩" };
    const unsigned char PY_mb_fang  [] = { "方坊芳防妨房肪仿访纺放" };
    const unsigned char PY_mb_fei   [] = { "飞非啡菲肥匪诽吠废沸肺费" };
    const unsigned char PY_mb_fen   [] = { "分吩纷芬氛酚坟汾焚粉份奋忿愤粪" };
    const unsigned char PY_mb_feng  [] = { "丰风枫封疯峰烽锋蜂冯逢缝讽凤奉" };
    const unsigned char PY_mb_fo    [] = { "佛" };
    const unsigned char PY_mb_fou   [] = { "否" };
    const unsigned char PY_mb_fu    [] = { "夫肤孵敷弗伏扶拂服俘氟浮涪符袱幅福辐抚甫府斧俯釜辅腑腐父讣付妇负附咐阜复赴副傅富赋缚腹覆" };
    const unsigned char PY_mb_ga    [] = { "嘎噶" };
    const unsigned char PY_mb_gai   [] = { "该改钙盖溉概" };
    const unsigned char PY_mb_gan   [] = { "干甘杆肝柑竿秆赶敢感赣" };
    const unsigned char PY_mb_gang  [] = { "冈刚岗纲肛缸钢港杠" };
    const unsigned char PY_mb_gao   [] = { "皋羔高膏篙糕搞稿镐告" };
    const unsigned char PY_mb_ge    [] = { "戈疙哥胳鸽割搁歌阁革格葛隔个各铬咯" };
    const unsigned char PY_mb_gei   [] = { "给" };
    const unsigned char PY_mb_gen   [] = { "根跟" };
    const unsigned char PY_mb_geng  [] = { "更庚耕羹埂耿梗" };
    const unsigned char PY_mb_gong  [] = { "工弓公功攻供宫恭躬龚巩汞拱共贡" };
    const unsigned char PY_mb_gou   [] = { "勾沟钩狗苟构购垢够" };
    const unsigned char PY_mb_gu    [] = { "估咕姑孤沽菇辜箍古谷股骨蛊鼓固故顾雇" };
    const unsigned char PY_mb_gua   [] = { "瓜刮剐寡挂褂" };
    const unsigned char PY_mb_guai  [] = { "乖拐怪" };
    const unsigned char PY_mb_guan  [] = { "关观官冠棺馆管贯惯灌罐" };
    const unsigned char PY_mb_guang [] = { "光广逛" };
    const unsigned char PY_mb_gui   [] = { "归圭龟规闺硅瑰轨诡癸鬼刽柜贵桂跪" };
    const unsigned char PY_mb_gun   [] = { "辊滚棍" };
    const unsigned char PY_mb_guo   [] = { "郭锅国果裹过" };
    const unsigned char PY_mb_ha    [] = { "蛤哈" };
    const unsigned char PY_mb_hai   [] = { "孩骸海亥骇害氦" };
    const unsigned char PY_mb_han   [] = { "酣憨含邯函涵寒韩罕喊汉汗旱悍捍焊憾撼翰" };
    const unsigned char PY_mb_hang  [] = { "杭航行" };
    const unsigned char PY_mb_hao   [] = { "毫豪嚎壕好郝号浩耗" };
    const unsigned char PY_mb_he    [] = { "呵喝禾合何和河阂核荷涸盒菏贺褐赫鹤" };
    const unsigned char PY_mb_hei   [] = { "黑嘿" };
    const unsigned char PY_mb_hen   [] = { "痕很狠恨" };
    const unsigned char PY_mb_heng  [] = { "亨哼恒横衡" };
    const unsigned char PY_mb_hong  [] = { "轰哄烘弘红宏洪虹鸿" };
    const unsigned char PY_mb_hou   [] = { "侯喉猴吼后厚候" };
    const unsigned char PY_mb_hu    [] = { "乎呼忽弧狐胡壶湖葫瑚糊蝴虎唬互户护沪" };
    const unsigned char PY_mb_hua   [] = { "花华哗滑猾化划画话" };
    const unsigned char PY_mb_huai  [] = { "怀徊淮槐坏" };
    const unsigned char PY_mb_huan  [] = { "欢还环桓缓幻宦唤换涣患焕痪豢" };
    const unsigned char PY_mb_huang [] = { "荒慌皇凰黄惶煌蝗磺簧恍晃谎幌" };
    const unsigned char PY_mb_hui   [] = { "灰恢挥辉徽回蛔悔卉汇会讳绘诲烩贿晦秽惠毁慧" };
    const unsigned char PY_mb_hun   [] = { "昏荤婚浑魂混" };
    const unsigned char PY_mb_huo   [] = { "豁活火伙或货获祸惑霍" };
    const unsigned char PY_mb_ji    [] = { "技讥击饥圾机肌鸡迹姬积基绩缉畸箕稽激及吉汲级即极急疾棘集嫉辑籍几己挤脊计记伎纪妓忌际剂季既济继寂寄悸祭蓟冀藉" };
    const unsigned char PY_mb_jia   [] = { "加夹佳枷家嘉荚颊甲贾钾价驾架假嫁稼挟" };
    const unsigned char PY_mb_jian  [] = { "奸尖坚歼间肩艰兼监笺缄煎拣俭柬茧捡减剪检硷简碱见件建饯剑荐贱健涧舰渐溅践鉴键箭" };
    const unsigned char PY_mb_jiang [] = { "江姜将浆僵疆讲奖桨蒋匠降酱" };
    const unsigned char PY_mb_jiao  [] = { "交郊娇浇骄胶椒焦蕉礁角狡绞饺矫脚铰搅剿缴叫轿较教窖酵觉嚼" };
    const unsigned char PY_mb_jie   [] = { "阶皆接秸揭街节劫杰洁结捷睫截竭姐解介戒芥届界疥诫借" };
    const unsigned char PY_mb_jin   [] = { "巾今斤金津筋襟仅紧谨锦尽劲近进晋浸烬禁靳" };
    const unsigned char PY_mb_jing  [] = { "京经茎荆惊晶睛粳兢精鲸井颈景警净径痉竞竟敬靖境静镜" };
    const unsigned char PY_mb_jiong [] = { "炯窘" };
    const unsigned char PY_mb_jiu   [] = { "纠究揪九久灸玖韭酒旧臼咎疚厩救就舅" };
    const unsigned char PY_mb_ju    [] = { "居拘狙驹疽鞠局桔菊咀沮举矩句巨拒具炬俱剧惧据距锯聚踞" };
    const unsigned char PY_mb_juan  [] = { "娟捐鹃卷倦绢眷" };
    const unsigned char PY_mb_jue   [] = { "撅决诀抉绝倔掘爵攫" };
    const unsigned char PY_mb_jun   [] = { "军君均钧菌俊郡峻浚骏竣" };
    const unsigned char PY_mb_ka    [] = { "咖喀卡" };
    const unsigned char PY_mb_kai   [] = { "开揩凯慨楷" };
    const unsigned char PY_mb_kan   [] = { "槛刊勘堪坎砍看" };
    const unsigned char PY_mb_kang  [] = { "康慷糠扛亢抗炕" };
    const unsigned char PY_mb_kao   [] = { "考拷烤靠" };
    const unsigned char PY_mb_ke    [] = { "坷苛柯科棵颗磕壳咳可渴克刻客课" };
    const unsigned char PY_mb_ken   [] = { "肯垦恳啃" };
    const unsigned char PY_mb_keng  [] = { "吭坑" };
    const unsigned char PY_mb_kong  [] = { "空孔恐控" };
    const unsigned char PY_mb_kou   [] = { "抠口扣寇" };
    const unsigned char PY_mb_ku    [] = { "枯哭窟苦库裤酷" };
    const unsigned char PY_mb_kua   [] = { "夸垮挎胯跨" };
    const unsigned char PY_mb_kuai  [] = { "块快侩筷" };
    const unsigned char PY_mb_kuan  [] = { "宽款" };
    const unsigned char PY_mb_kuang [] = { "匡筐狂况旷矿框眶" };
    const unsigned char PY_mb_kui   [] = { "亏岿盔窥奎葵魁傀愧溃馈" };
    const unsigned char PY_mb_kun   [] = { "坤昆捆困" };
    const unsigned char PY_mb_kuo   [] = { "扩括阔廓" };
    const unsigned char PY_mb_la    [] = { "垃拉啦喇腊蜡辣" };
    const unsigned char PY_mb_lai   [] = { "来莱赖" };
    const unsigned char PY_mb_lan   [] = { "兰拦栏婪阑蓝谰澜篮览揽缆懒烂滥" };
    const unsigned char PY_mb_lang  [] = { "郎狼廊琅榔朗浪" };
    const unsigned char PY_mb_lao   [] = { "捞劳牢老佬姥涝烙酪" };
    const unsigned char PY_mb_le    [] = { "乐勒了" };
    const unsigned char PY_mb_lei   [] = { "雷镭垒磊蕾儡肋泪类累擂" };
    const unsigned char PY_mb_leng  [] = { "棱楞冷" };
    const unsigned char PY_mb_li    [] = { "厘梨狸离莉犁漓璃黎篱礼李里哩理鲤力历厉立吏丽利励沥例隶俐荔栗砾粒傈痢" };
    const unsigned char PY_mb_lian  [] = { "连帘怜涟莲联廉镰敛脸练炼恋链" };
    const unsigned char PY_mb_liang [] = { "俩良凉梁粮粱两亮谅辆晾量" };
    const unsigned char PY_mb_liao  [] = { "潦辽疗聊僚寥廖撩燎镣料撂" };
    const unsigned char PY_mb_lie   [] = { "列劣烈猎裂" };
    const unsigned char PY_mb_lin   [] = { "邻林临淋琳霖磷鳞凛吝赁拎" };
    const unsigned char PY_mb_ling  [] = { "伶灵岭玲凌铃陵羚菱零龄领令另" };
    const unsigned char PY_mb_liu   [] = { "溜刘流留琉硫馏榴瘤柳六" };
    const unsigned char PY_mb_long  [] = { "龙咙笼聋隆窿陇垄拢" };
    const unsigned char PY_mb_lou   [] = { "娄楼搂篓陋漏" };
    const unsigned char PY_mb_lu    [] = { "露卢庐芦炉颅卤虏掳鲁陆录赂鹿禄碌路戮潞麓" };
    const unsigned char PY_mb_luan  [] = { "孪峦挛滦卵乱" };
    const unsigned char PY_mb_lue   [] = { "掠略" };
    const unsigned char PY_mb_lun   [] = { "抡仑伦沦纶轮论" };
    const unsigned char PY_mb_luo   [] = { "罗萝逻锣箩骡螺裸洛络骆落" };
    const unsigned char PY_mb_lv    [] = { "滤驴吕侣旅铝屡缕履律虑率绿氯" };
    const unsigned char PY_mb_ma    [] = { "妈麻马玛码蚂骂吗嘛" };
    const unsigned char PY_mb_mai   [] = { "埋买迈麦卖脉" };
    const unsigned char PY_mb_man   [] = { "蛮馒瞒满曼谩慢漫蔓" };
    const unsigned char PY_mb_mang  [] = { "忙芒盲茫莽氓" };
    const unsigned char PY_mb_mao   [] = { "猫毛矛茅锚卯铆茂冒贸帽貌" };
    const unsigned char PY_mb_me    [] = { "么" };
    const unsigned char PY_mb_mei   [] = { "没枚玫眉梅媒煤酶霉每美镁妹昧媚寐" };
    const unsigned char PY_mb_men   [] = { "门闷们" };
    const unsigned char PY_mb_meng  [] = { "萌盟檬猛蒙锰孟梦" };
    const unsigned char PY_mb_mi    [] = { "弥迷谜醚糜靡米眯泌觅秘密幂蜜" };
    const unsigned char PY_mb_mian  [] = { "眠绵棉免勉娩冕缅面" };
    const unsigned char PY_mb_miao  [] = { "苗描瞄秒渺藐妙庙" };
    const unsigned char PY_mb_mie   [] = { "灭蔑" };
    const unsigned char PY_mb_min   [] = { "民皿抿闽悯敏" };
    const unsigned char PY_mb_ming  [] = { "名明鸣铭螟命" };
    const unsigned char PY_mb_miu   [] = { "谬" };
    const unsigned char PY_mb_mo    [] = { "貉摸摹模膜摩磨蘑魔抹末沫陌莫寞漠墨默" };
    const unsigned char PY_mb_mou   [] = { "牟谋某" };
    const unsigned char PY_mb_mu    [] = { "母亩牡姆拇木目牧募墓幕睦慕暮穆" };
    const unsigned char PY_mb_na    [] = { "拿哪那纳娜钠呐" };
    const unsigned char PY_mb_nai   [] = { "乃奶氖奈耐" };
    const unsigned char PY_mb_nan   [] = { "男南难楠" };
    const unsigned char PY_mb_nang  [] = { "囊" };
    const unsigned char PY_mb_nao   [] = { "挠恼脑闹淖" };
    const unsigned char PY_mb_ne    [] = { "呢" };
    const unsigned char PY_mb_nei   [] = { "内馁" };
    const unsigned char PY_mb_nen   [] = { "嫩" };
    const unsigned char PY_mb_neng  [] = { "能" };
    const unsigned char PY_mb_ni    [] = { "妮尼泥倪霓你拟逆匿溺腻" };
    const unsigned char PY_mb_nian  [] = { "拈年捻撵碾念蔫" };
    const unsigned char PY_mb_niang [] = { "娘酿" };
    const unsigned char PY_mb_niao  [] = { "鸟尿" };
    const unsigned char PY_mb_nie   [] = { "捏涅聂啮镊镍孽" };
    const unsigned char PY_mb_nin   [] = { "您" };
    const unsigned char PY_mb_ning  [] = { "宁拧狞柠凝泞" };
    const unsigned char PY_mb_niu   [] = { "牛扭纽钮" };
    const unsigned char PY_mb_nong  [] = { "农浓脓弄" };
    const unsigned char PY_mb_nu    [] = { "奴努怒" };
    const unsigned char PY_mb_nuan  [] = { "暖" };
    const unsigned char PY_mb_nue   [] = { "疟虐" };
    const unsigned char PY_mb_nuo   [] = { "挪诺懦糯" };
    const unsigned char PY_mb_nv    [] = { "女" };
    const unsigned char PY_mb_o     [] = { "哦" };
    const unsigned char PY_mb_ou    [] = { "欧殴鸥呕偶藕沤" };
    const unsigned char PY_mb_pa    [] = { "趴啪爬耙琶帕怕" };
    const unsigned char PY_mb_pai   [] = { "拍徘排牌派湃" };
    const unsigned char PY_mb_pan   [] = { "潘攀盘磐判叛盼畔" };
    const unsigned char PY_mb_pang  [] = { "乓庞旁耪胖" };
    const unsigned char PY_mb_pao   [] = { "抛刨咆炮袍跑泡" };
    const unsigned char PY_mb_pei   [] = { "呸胚陪培赔裴沛佩配" };
    const unsigned char PY_mb_pen   [] = { "喷盆" };
    const unsigned char PY_mb_peng  [] = { "抨砰烹朋彭棚硼蓬鹏澎篷膨捧碰" };
    const unsigned char PY_mb_pi    [] = { "辟批坯披砒劈霹皮毗疲啤琵脾匹痞屁僻譬" };
    const unsigned char PY_mb_pian  [] = { "片偏篇骗" };
    const unsigned char PY_mb_piao  [] = { "漂飘瓢票" };
    const unsigned char PY_mb_pie   [] = { "撇瞥" };
    const unsigned char PY_mb_pin   [] = { "拼贫频品聘" };
    const unsigned char PY_mb_ping  [] = { "平评凭屏瓶坪苹萍乒" };
    const unsigned char PY_mb_po    [] = { "坡泼颇婆迫破粕魄" };
    const unsigned char PY_mb_pou   [] = { "剖" };
    const unsigned char PY_mb_pu    [] = { "脯仆扑铺莆菩葡蒲朴圃埔浦普谱曝" };
    const unsigned char PY_mb_qi    [] = { "七沏妻柒凄栖戚期欺漆祁齐其奇歧祈脐崎畦骑棋旗乞企岂启起气讫迄弃汽泣契砌器" };
    const unsigned char PY_mb_qia   [] = { "掐恰洽" };
    const unsigned char PY_mb_qian  [] = { "千仟扦迁钎牵铅谦签前钱钳乾潜黔浅遣谴欠堑嵌歉" };
    const unsigned char PY_mb_qiang [] = { "呛羌枪腔强墙蔷抢" };
    const unsigned char PY_mb_qiao  [] = { "悄敲锹橇乔侨桥瞧巧俏峭窍翘撬鞘" };
    const unsigned char PY_mb_qie   [] = { "切茄且怯窃" };
    const unsigned char PY_mb_qin   [] = { "亲侵钦芹秦琴禽勤擒寝沁" };
    const unsigned char PY_mb_qing  [] = { "青氢轻倾卿清情晴氰擎顷请庆" };
    const unsigned char PY_mb_qiong [] = { "穷琼" };
    const unsigned char PY_mb_qiu   [] = { "丘邱秋囚求泅酋球" };
    const unsigned char PY_mb_qu    [] = { "区曲驱屈蛆躯趋渠取娶龋去趣" };
    const unsigned char PY_mb_quan  [] = { "圈全权泉拳痊醛颧犬劝券" };
    const unsigned char PY_mb_que   [] = { "炔缺瘸却雀确鹊榷" };
    const unsigned char PY_mb_qun   [] = { "裙群" };
    const unsigned char PY_mb_ran   [] = { "然燃冉染" };
    const unsigned char PY_mb_rang  [] = { "瓤嚷壤攘让" };
    const unsigned char PY_mb_rao   [] = { "饶扰绕" };
    const unsigned char PY_mb_re    [] = { "惹热" };
    const unsigned char PY_mb_ren   [] = { "人仁壬忍刃认任纫妊韧" };
    const unsigned char PY_mb_reng  [] = { "扔仍" };
    const unsigned char PY_mb_ri    [] = { "日" };
    const unsigned char PY_mb_rong  [] = { "戎绒茸荣容溶蓉熔融冗" };
    const unsigned char PY_mb_rou   [] = { "柔揉肉" };
    const unsigned char PY_mb_ru    [] = { "如茹儒孺蠕汝乳辱入褥" };
    const unsigned char PY_mb_ruan  [] = { "阮软" };
    const unsigned char PY_mb_rui   [] = { "蕊锐瑞" };
    const unsigned char PY_mb_run   [] = { "闰润" };
    const unsigned char PY_mb_ruo   [] = { "若弱" };
    const unsigned char PY_mb_sa    [] = { "撒洒萨" };
    const unsigned char PY_mb_sai   [] = { "塞腮鳃赛" };
    const unsigned char PY_mb_san   [] = { "三伞散叁" };
    const unsigned char PY_mb_sang  [] = { "桑嗓丧" };
    const unsigned char PY_mb_sao   [] = { "搔骚扫嫂" };
    const unsigned char PY_mb_se    [] = { "色涩瑟" };
    const unsigned char PY_mb_sen   [] = { "森" };
    const unsigned char PY_mb_seng  [] = { "僧" };
    const unsigned char PY_mb_sha   [] = { "杀沙纱砂莎傻啥煞厦" };
    const unsigned char PY_mb_shai  [] = { "筛晒" };
    const unsigned char PY_mb_shan  [] = { "山删杉衫珊煽闪陕汕苫扇善缮擅膳赡栅" };
    const unsigned char PY_mb_shang [] = { "伤商墒裳晌赏上尚" };
    const unsigned char PY_mb_shao  [] = { "捎梢烧稍勺芍韶少邵绍哨" };
    const unsigned char PY_mb_she   [] = { "奢赊舌蛇舍设社射涉赦慑摄" };
    const unsigned char PY_mb_shen  [] = { "申伸身呻绅娠砷深神沈审婶肾甚渗慎什" };
    const unsigned char PY_mb_sheng [] = { "升生声牲胜甥绳省圣盛剩" };
    const unsigned char PY_mb_shi   [] = { "是十石时士识事食示式使始室势实视试史适施市驶湿似匙尸失逝释师虱诗狮拾蚀矢屎氏世仕侍饰恃拭柿嗜誓噬" };
    const unsigned char PY_mb_shou  [] = { "收手守首寿受兽售授瘦" };
    const unsigned char PY_mb_shu   [] = { "书抒叔枢殊梳淑疏舒输蔬孰赎熟暑黍署鼠蜀薯曙术戍束述树竖恕庶数墅漱属" };
    const unsigned char PY_mb_shua  [] = { "刷耍" };
    const unsigned char PY_mb_shuai [] = { "衰摔甩帅" };
    const unsigned char PY_mb_shuan [] = { "拴栓" };
    const unsigned char PY_mb_shuang[] = { "双霜爽" };
    const unsigned char PY_mb_shui  [] = { "谁水税睡" };
    const unsigned char PY_mb_shun  [] = { "吮顺舜瞬" };
    const unsigned char PY_mb_shuo  [] = { "说烁朔硕" };
    const unsigned char PY_mb_si    [] = { "四丝司私思斯死撕寺嘶巳伺饲嗣肆" };
    const unsigned char PY_mb_song  [] = { "送宋松耸怂讼诵颂" };
    const unsigned char PY_mb_sou   [] = { "嗽搜艘擞" };
    const unsigned char PY_mb_su    [] = { "苏酥俗诉肃素速粟塑溯僳" };
    const unsigned char PY_mb_suan  [] = { "酸蒜算" };
    const unsigned char PY_mb_sui   [] = { "虽岁绥隋随髓祟遂碎隧穗" };
    const unsigned char PY_mb_sun   [] = { "孙损笋" };
    const unsigned char PY_mb_suo   [] = { "唆梭蓑缩所索琐锁" };
    const unsigned char PY_mb_ta    [] = { "她他它塌塔獭挞踏蹋" };
    const unsigned char PY_mb_tai   [] = { "胎台抬苔太汰态泰酞" };
    const unsigned char PY_mb_tan   [] = { "坍贪摊滩瘫坛谈痰谭潭檀坦袒毯叹炭探碳" };
    const unsigned char PY_mb_tang  [] = { "汤唐堂棠塘搪膛糖倘淌躺烫趟" };
    const unsigned char PY_mb_tao   [] = { "涛绦掏滔逃桃陶淘萄讨套" };
    const unsigned char PY_mb_te    [] = { "特" };
    const unsigned char PY_mb_teng  [] = { "疼腾誊藤" };
    const unsigned char PY_mb_ti    [] = { "剔梯锑踢啼提题蹄体屉剃涕惕替嚏" };
    const unsigned char PY_mb_tian  [] = { "天添田恬甜填腆舔" };
    const unsigned char PY_mb_tiao  [] = { "调挑条迢眺跳" };
    const unsigned char PY_mb_tie   [] = { "贴铁帖" };
    const unsigned char PY_mb_ting  [] = { "停厅汀听烃廷亭庭挺艇" };
    const unsigned char PY_mb_tong  [] = { "通同彤桐铜童酮瞳统捅桶筒痛" };
    const unsigned char PY_mb_tou   [] = { "偷头投透" };
    const unsigned char PY_mb_tu    [] = { "凸秃突图徒涂途屠土吐兔" };
    const unsigned char PY_mb_tuan  [] = { "湍团" };
    const unsigned char PY_mb_tui   [] = { "推颓腿退蜕褪" };
    const unsigned char PY_mb_tun   [] = { "囤吞屯臀" };
    const unsigned char PY_mb_tuo   [] = { "托拖脱驮陀驼鸵妥椭拓唾" };
    const unsigned char PY_mb_wa    [] = { "哇娃挖洼蛙瓦袜" };
    const unsigned char PY_mb_wai   [] = { "外歪" };
    const unsigned char PY_mb_wan   [] = { "万完玩晚弯碗湾豌丸顽烷宛挽婉惋皖腕" };
    const unsigned char PY_mb_wang  [] = { "王网往忘旺望汪亡枉妄" };
    const unsigned char PY_mb_wei   [] = { "危威微巍为韦围违桅唯惟维潍伟伪尾纬苇委萎卫未位味畏胃尉谓喂渭蔚慰魏" };
    const unsigned char PY_mb_wen   [] = { "温瘟文纹闻蚊吻紊稳问" };
    const unsigned char PY_mb_weng  [] = { "翁嗡瓮" };
    const unsigned char PY_mb_wo    [] = { "我沃卧窝握涡蜗斡挝" };
    const unsigned char PY_mb_wu    [] = { "五吴误无屋武午乌污呜巫诬钨毋吾芜梧伍坞侮捂舞勿务戊物悟晤雾" };
    const unsigned char PY_mb_xi    [] = { "夕汐西吸希昔析矽息牺悉惜烯硒晰犀稀溪锡熄熙嘻膝习席袭媳檄洗喜戏系细隙" };
    const unsigned char PY_mb_xia   [] = { "虾瞎匣侠峡狭暇辖霞下吓夏" };
    const unsigned char PY_mb_xian  [] = { "铣仙先纤掀锨鲜闲弦贤咸涎舷衔嫌显险县现线限宪陷馅羡献腺" };
    const unsigned char PY_mb_xiang [] = { "乡相香厢湘箱襄镶详祥翔享响想向巷项象像橡" };
    const unsigned char PY_mb_xiao  [] = { "宵消萧硝销霄嚣淆小晓孝肖哮效校笑啸" };
    const unsigned char PY_mb_xie   [] = { "些楔歇蝎协邪胁斜谐携鞋写泄泻卸屑械谢懈蟹" };
    const unsigned char PY_mb_xin   [] = { "心忻芯辛欣锌新薪信衅" };
    const unsigned char PY_mb_xing  [] = { "兴星惺猩腥刑邢形型醒杏姓幸性" };
    const unsigned char PY_mb_xiong [] = { "凶兄匈汹胸雄熊" };
    const unsigned char PY_mb_xiu   [] = { "宿休修羞朽秀绣袖锈嗅" };
    const unsigned char PY_mb_xu    [] = { "戌须虚嘘需墟徐许旭序叙恤绪续酗婿絮蓄吁" };
    const unsigned char PY_mb_xuan  [] = { "轩宣喧玄悬旋选癣绚眩" };
    const unsigned char PY_mb_xue   [] = { "学雪血削靴薛穴" };
    const unsigned char PY_mb_xun   [] = { "寻旬迅询讯勋熏巡驯循训汛逊殉" };
    const unsigned char PY_mb_ya    [] = { "呀压牙亚雅丫押鸦鸭芽蚜崖涯衙哑讶" };
    const unsigned char PY_mb_yan   [] = { "咽烟淹焉阉延严言岩沿炎研盐阎蜒颜奄衍掩眼演厌彦砚唁宴艳验谚堰焰雁燕" };
    const unsigned char PY_mb_yang  [] = { "阳扬杨样养羊央殃秧鸯佯疡洋仰氧痒漾" };
    const unsigned char PY_mb_yao   [] = { "侥妖腰邀尧姚窑谣摇遥瑶咬舀药要耀钥" };
    const unsigned char PY_mb_ye    [] = { "椰噎爷耶也冶野业叶曳页夜掖液腋" };
    const unsigned char PY_mb_yi    [] = { "一伊衣医依铱壹揖仪夷沂宜姨胰移遗颐疑彝乙已以矣蚁倚椅义亿忆艺议亦屹异役抑译邑易绎诣疫益谊翌逸意溢肄裔毅翼臆" };
    const unsigned char PY_mb_yin   [] = { "因阴姻茵荫音殷吟寅淫银尹引饮隐印" };
    const unsigned char PY_mb_ying  [] = { "应英婴缨樱鹰迎盈荧莹萤营蝇赢颖影映硬" };
    const unsigned char PY_mb_yo    [] = { "哟" };
    const unsigned char PY_mb_yong  [] = { "佣拥痈庸雍臃永咏泳勇涌恿蛹踊用" };
    const unsigned char PY_mb_you   [] = { "优忧幽悠尤由犹邮油铀游友有酉又右幼佑诱釉" };
    const unsigned char PY_mb_yu    [] = { "迂淤渝于予余盂鱼俞娱渔隅愉逾愚榆虞舆与宇屿羽雨禹语玉驭芋育郁狱峪浴预域欲喻寓御裕遇愈誉豫" };
    const unsigned char PY_mb_yuan  [] = { "冤鸳渊元员园垣原圆袁援缘源猿辕远苑怨院愿" };
    const unsigned char PY_mb_yue   [] = { "曰约月岳悦阅跃粤越" };
    const unsigned char PY_mb_yun   [] = { "云匀郧耘允陨孕运晕酝韵蕴" };
    const unsigned char PY_mb_za    [] = { "匝杂砸咋" };
    const unsigned char PY_mb_zai   [] = { "灾哉栽宰载再在仔" };
    const unsigned char PY_mb_zan   [] = { "咱攒暂赞" };
    const unsigned char PY_mb_zang  [] = { "赃脏葬" };
    const unsigned char PY_mb_zao   [] = { "遭糟凿早枣蚤澡藻灶皂造噪燥躁" };
    const unsigned char PY_mb_ze    [] = { "则择泽责" };
    const unsigned char PY_mb_zei   [] = { "贼" };
    const unsigned char PY_mb_zen   [] = { "怎" };
    const unsigned char PY_mb_zeng  [] = { "增憎赠" };
    const unsigned char PY_mb_zha   [] = { "喳渣扎札轧闸铡眨乍诈炸榨柞" };
    const unsigned char PY_mb_zhai  [] = { "斋摘宅翟窄债寨" };
    const unsigned char PY_mb_zhan  [] = { "沾毡粘詹瞻斩展盏崭辗占战栈站绽湛蘸" };
    const unsigned char PY_mb_zhang [] = { "长张章彰漳樟涨掌丈仗帐杖胀账障瘴" };
    const unsigned char PY_mb_zhao  [] = { "招昭找沼召兆赵照罩肇爪" };
    const unsigned char PY_mb_zhe   [] = { "遮折哲蛰辙者锗这浙蔗着" };
    const unsigned char PY_mb_zhen  [] = { "贞针侦珍真砧斟甄臻诊枕疹阵振镇震帧" };
    const unsigned char PY_mb_zheng [] = { "争征怔挣狰睁蒸拯整正证郑政症" };
    const unsigned char PY_mb_zhi   [] = { "之支汁芝吱枝知织肢脂蜘执侄直值职植殖止只旨址纸指趾至志制帜治炙质峙挚秩致掷痔窒智滞稚置" };
    const unsigned char PY_mb_zhong [] = { "中忠重终盅钟衷肿种仲众" };
    const unsigned char PY_mb_zhou  [] = { "州舟诌周洲粥轴肘帚咒宙昼皱骤" };
    const unsigned char PY_mb_zhu   [] = { "主住注祝朱猪助柱竹逐株珠嘱著诸蛛烛诛拄煮瞩贮驻蛀筑铸" };
    const unsigned char PY_mb_zhua  [] = { "抓" };
    const unsigned char PY_mb_zhuai [] = { "拽" };
    const unsigned char PY_mb_zhuan [] = { "专砖转撰篆" };
    const unsigned char PY_mb_zhuang[] = { "妆庄桩装壮状幢撞" };
    const unsigned char PY_mb_zhui  [] = { "追坠椎锥缀赘" };
    const unsigned char PY_mb_zhun  [] = { "准谆" };
    const unsigned char PY_mb_zhuo  [] = { "卓拙捉桌灼茁浊酌啄琢" };
    const unsigned char PY_mb_zi    [] = { "孜兹咨姿资淄滋籽子紫滓字自渍" };
    const unsigned char PY_mb_zong  [] = { "宗综棕踪鬃总纵" };
    const unsigned char PY_mb_zou   [] = { "走奏邹揍" };
    const unsigned char PY_mb_zu    [] = { "租足卒族诅阻组祖" };
    const unsigned char PY_mb_zuan  [] = { "赚钻纂" };
    const unsigned char PY_mb_zui   [] = { "嘴最罪醉" };
    const unsigned char PY_mb_zun   [] = { "尊遵" };
    const unsigned char PY_mb_zuo   [] = { "昨左佐作坐座做" };

    const T9PY_IDX t9EN_index[] = {
        {"0", "", (const unsigned char*)"0 .,?;:@/?'\"[]{}!@#$%^&*()-_=+\\|`~/" },
        {"1", "", (const unsigned char*)"1"},
        {"2", "", (const unsigned char*)"2abcABC"},
        {"3", "", (const unsigned char*)"3defDEF"},
        {"4", "", (const unsigned char*)"4ghiGHI"},
        {"5", "", (const unsigned char*)"5jklJKL"},
        {"6", "", (const unsigned char*)"6mnoMNO"},
        {"7", "", (const unsigned char*)"7pqrsPRQS"},
        {"8", "", (const unsigned char*)"8tuvTUV"},
        {"9", "", (const unsigned char*)"9wxyzWXYZ"},
    };

    /* 拼音输入法查询码表,T9数字字母索引表(index) */
    const T9PY_IDX t9PY_index[] = {
        {"0","0",PY_mb_symbol},
        {"1","1",PY_mb_space},
        {"2","a",PY_mb_a},
        {"2","b",PY_mb_space},
        {"2","c",PY_mb_space},
        {"3","d",PY_mb_space},
        {"3","e",PY_mb_e},
        {"3","f",PY_mb_space},
        {"4","g",PY_mb_space},
        {"4","h",PY_mb_space},
        {"4","i",PY_mb_space},
        {"5","j",PY_mb_space},
        {"5","k",PY_mb_space},
        {"5","l",PY_mb_space},
        {"6","m",PY_mb_space},
        {"6","n",PY_mb_space},
        {"6","o",PY_mb_o},
        {"7","p",PY_mb_space},
        {"7","q",PY_mb_space},
        {"7","r",PY_mb_space},
        {"7","s",PY_mb_space},
        {"8","t",PY_mb_space},
        {"8","u",PY_mb_space},
        {"8","v",PY_mb_space},
        {"9","w",PY_mb_space},
        {"9","x",PY_mb_space},
        {"9","y",PY_mb_space},
        {"9","z",PY_mb_space},
        {"24","ai",PY_mb_ai},
        {"26","an",PY_mb_an},
        {"26","ao",PY_mb_ao},
        {"22","ba",PY_mb_ba},
        {"24","bi",PY_mb_bi},
        {"26","bo",PY_mb_bo},
        {"28","bu",PY_mb_bu},
        {"22","ca",PY_mb_ca},
        {"23","ce",PY_mb_ce},
        {"24","ci",PY_mb_ci},
        {"28","cu",PY_mb_cu},
        {"32","da",PY_mb_da},
        {"33","de",PY_mb_de},
        {"34","di",PY_mb_di},
        {"38","du",PY_mb_du},
        {"36","en",PY_mb_en},
        {"37","er",PY_mb_er},
        {"32","fa",PY_mb_fa},
        {"36","fo",PY_mb_fo},
        {"38","fu",PY_mb_fu},
        {"42","ha",PY_mb_ha},
        {"42","ga",PY_mb_ga},
        {"43","ge",PY_mb_ge},
        {"43","he",PY_mb_he},
        {"48","gu",PY_mb_gu},
        {"48","hu",PY_mb_hu},
        {"54","ji",PY_mb_ji},
        {"58","ju",PY_mb_ju},
        {"52","ka",PY_mb_ka},
        {"53","ke",PY_mb_ke},
        {"58","ku",PY_mb_ku},
        {"52","la",PY_mb_la},
        {"53","le",PY_mb_le},
        {"54","li",PY_mb_li},
        {"58","lu",PY_mb_lu},
        {"58","lv",PY_mb_lv},
        {"62","ma",PY_mb_ma},
        {"63","me",PY_mb_me},
        {"64","mi",PY_mb_mi},
        {"66","mo",PY_mb_mo},
        {"68","mu",PY_mb_mu},
        {"62","na",PY_mb_na},
        {"63","ne",PY_mb_ne},
        {"64","ni",PY_mb_ni},
        {"68","nu",PY_mb_nu},
        {"68","nv",PY_mb_nv},
        {"68","ou",PY_mb_ou},
        {"72","pa",PY_mb_pa},
        {"74","pi",PY_mb_pi},
        {"76","po",PY_mb_po},
        {"78","pu",PY_mb_pu},
        {"74","qi",PY_mb_qi},
        {"78","qu",PY_mb_qu},
        {"73","re",PY_mb_re},
        {"74","ri",PY_mb_ri},
        {"78","ru",PY_mb_ru},
        {"72","sa",PY_mb_sa},
        {"73","se",PY_mb_se},
        {"74","si",PY_mb_si},
        {"78","su",PY_mb_su},
        {"82","ta",PY_mb_ta},
        {"83","te",PY_mb_te},
        {"84","ti",PY_mb_ti},
        {"88","tu",PY_mb_tu},
        {"92","wa",PY_mb_wa},
        {"96","wo",PY_mb_wo},
        {"98","wu",PY_mb_wu},
        {"94","xi",PY_mb_xi},
        {"98","xu",PY_mb_xu},
        {"92","ya",PY_mb_ya},
        {"93","ye",PY_mb_ye},
        {"94","yi",PY_mb_yi},
        {"96","yo",PY_mb_yo},
        {"98","yu",PY_mb_yu},
        {"92","za",PY_mb_za},
        {"93","ze",PY_mb_ze},
        {"94","zi",PY_mb_zi},
        {"98","zu",PY_mb_zu},
        {"264","ang",PY_mb_ang},
        {"224","bai",PY_mb_bai},
        {"226","ban",PY_mb_ban},
        {"226","bao",PY_mb_bao},
        {"234","bei",PY_mb_bei},
        {"236","ben",PY_mb_ben},
        {"243","bie",PY_mb_bie},
        {"246","bin",PY_mb_bin},
        {"224","cai",PY_mb_cai},
        {"226","can",PY_mb_can},
        {"226","cao",PY_mb_cao},
        {"242","cha",PY_mb_cha},
        {"243","che",PY_mb_che},
        {"244","chi",PY_mb_chi},
        {"248","chu",PY_mb_chu},
        {"268","cou",PY_mb_cou},
        {"284","cui",PY_mb_cui},
        {"286","cun",PY_mb_cun},
        {"286","cuo",PY_mb_cuo},
        {"324","dai",PY_mb_dai},
        {"326","dan",PY_mb_dan},
        {"326","dao",PY_mb_dao},
        {"343","die",PY_mb_die},
        {"348","diu",PY_mb_diu},
        {"368","dou",PY_mb_dou},
        {"384","dui",PY_mb_dui},
        {"386","dun",PY_mb_dun},
        {"386","duo",PY_mb_duo},
        {"326","fan",PY_mb_fan},
        {"334","fei",PY_mb_fei},
        {"336","fen",PY_mb_fen},
        {"368","fou",PY_mb_fou},
        {"424","gai",PY_mb_gai},
        {"426","gan",PY_mb_gan},
        {"426","gao",PY_mb_gao},
        {"434","gei",PY_mb_gei},
        {"436","gen",PY_mb_gan},
        {"468","gou",PY_mb_gou},
        {"482","gua",PY_mb_gua},
        {"484","gui",PY_mb_gui},
        {"486","gun",PY_mb_gun},
        {"486","guo",PY_mb_guo},
        {"423","hai",PY_mb_hai},
        {"426","han",PY_mb_han},
        {"426","hao",PY_mb_hao},
        {"434","hei",PY_mb_hei},
        {"436","hen",PY_mb_hen},
        {"468","hou",PY_mb_hou},
        {"482","hua",PY_mb_hua},
        {"484","hui",PY_mb_hui},
        {"486","hun",PY_mb_hun},
        {"486","huo",PY_mb_huo},
        {"542","jia",PY_mb_jia},
        {"543","jie",PY_mb_jie},
        {"546","jin",PY_mb_jin},
        {"548","jiu",PY_mb_jiu},
        {"583","jue",PY_mb_jue},
        {"586","jun",PY_mb_jun},
        {"524","kai",PY_mb_kai},
        {"526","kan",PY_mb_kan},
        {"526","kao",PY_mb_kao},
        {"536","ken",PY_mb_ken},
        {"568","kou",PY_mb_kou},
        {"582","kua",PY_mb_kua},
        {"584","kui",PY_mb_kui},
        {"586","kun",PY_mb_kun},
        {"586","kuo",PY_mb_kuo},
        {"524","lai",PY_mb_lai},
        {"526","lan",PY_mb_lan},
        {"526","lao",PY_mb_lao},
        {"534","lei",PY_mb_lei},
        {"543","lie",PY_mb_lie},
        {"546","lin",PY_mb_lin},
        {"548","liu",PY_mb_liu},
        {"568","lou",PY_mb_lou},
        {"583","lue",PY_mb_lue},
        {"586","lun",PY_mb_lun},
        {"586","luo",PY_mb_luo},
        {"624","mai",PY_mb_mai},
        {"626","man",PY_mb_man},
        {"626","mao",PY_mb_mao},
        {"634","mei",PY_mb_mei},
        {"636","men",PY_mb_men},
        {"643","mie",PY_mb_mie},
        {"646","min",PY_mb_min},
        {"648","miu",PY_mb_miu},
        {"668","mou",PY_mb_mou},
        {"624","nai",PY_mb_nai},
        {"626","nan",PY_mb_nan},
        {"626","nao",PY_mb_nao},
        {"634","nei",PY_mb_nei},
        {"636","nen",PY_mb_nen},
        {"643","nie",PY_mb_nie},
        {"646","nin",PY_mb_nin},
        {"648","niu",PY_mb_niu},
        {"683","nue",PY_mb_nue},
        {"686","nuo",PY_mb_nuo},
        {"724","pai",PY_mb_pai},
        {"726","pan",PY_mb_pan},
        {"726","pao",PY_mb_pao},
        {"734","pei",PY_mb_pei},
        {"736","pen",PY_mb_pen},
        {"743","pie",PY_mb_pie},
        {"746","pin",PY_mb_pin},
        {"768","pou",PY_mb_pou},
        {"742","qia",PY_mb_qia},
        {"743","qie",PY_mb_qie},
        {"746","qin",PY_mb_qin},
        {"748","qiu",PY_mb_qiu},
        {"783","que",PY_mb_que},
        {"786","qun",PY_mb_qun},
        {"726","ran",PY_mb_ran},
        {"726","rao",PY_mb_rao},
        {"736","ren",PY_mb_ren},
        {"768","rou",PY_mb_rou},
        {"784","rui",PY_mb_rui},
        {"786","run",PY_mb_run},
        {"786","ruo",PY_mb_ruo},
        {"724","sai",PY_mb_sai},
        {"726","sao",PY_mb_sao},
        {"726","san",PY_mb_san},
        {"736","sen",PY_mb_sen},
        {"742","sha",PY_mb_sha},
        {"743","she",PY_mb_she},
        {"744","shi",PY_mb_shi},
        {"748","shu",PY_mb_shu},
        {"768","sou",PY_mb_sou},
        {"784","sui",PY_mb_sui},
        {"786","sun",PY_mb_sun},
        {"786","suo",PY_mb_suo},
        {"824","tai",PY_mb_tai},
        {"826","tan",PY_mb_tan},
        {"826","tao",PY_mb_tao},
        {"843","tie",PY_mb_tie},
        {"868","tou",PY_mb_tou},
        {"884","tui",PY_mb_tui},
        {"886","tun",PY_mb_tun},
        {"886","tuo",PY_mb_tuo},
        {"924","wai",PY_mb_wai},
        {"926","wan",PY_mb_wan},
        {"934","wei",PY_mb_wei},
        {"936","wen",PY_mb_wen},
        {"942","xia",PY_mb_xia},
        {"943","xie",PY_mb_xie},
        {"946","xin",PY_mb_xin},
        {"948","xiu",PY_mb_xiu},
        {"983","xue",PY_mb_xue},
        {"986","xun",PY_mb_xun},
        {"926","yan",PY_mb_yan},
        {"926","yao",PY_mb_yao},
        {"946","yin",PY_mb_yin},
        {"968","you",PY_mb_you},
        {"983","yue",PY_mb_yue},
        {"986","yun",PY_mb_yun},
        {"924","zai",PY_mb_zai},
        {"926","zan",PY_mb_zan},
        {"926","zao",PY_mb_zao},
        {"934","zei",PY_mb_zei},
        {"936","zen",PY_mb_zen},
        {"942","zha",PY_mb_zha},
        {"943","zhe",PY_mb_zhe},
        {"944","zhi",PY_mb_zhi},
        {"948","zhu",PY_mb_zhu},
        {"968","zou",PY_mb_zou},
        {"984","zui",PY_mb_zui},
        {"986","zun",PY_mb_zun},
        {"986","zuo",PY_mb_zuo},
        {"2264","bang",PY_mb_bang},
        {"2364","beng",PY_mb_beng},
        {"2426","bian",PY_mb_bian},
        {"2426","biao",PY_mb_biao},
        {"2464","bing",PY_mb_bing},
        {"2264","cang",PY_mb_cang},
        {"2364","ceng",PY_mb_ceng},
        {"2424","chai",PY_mb_chai},
        {"2426","chan",PY_mb_chan},
        {"2426","chao",PY_mb_chao},
        {"2436","chen",PY_mb_chen},
        {"2468","chou",PY_mb_chou},
        {"2484","chuai",PY_mb_chuai},
        {"2484","chui",PY_mb_chui},
        {"2484","chun",PY_mb_chun},
        {"2486","chuo",PY_mb_chuo},
        {"2664","cong",PY_mb_cong},
        {"2826","cuan",PY_mb_cuan},
        {"3264","dang",PY_mb_dang},
        {"3364","deng",PY_mb_deng},
        {"3426","dian",PY_mb_dian},
        {"3426","diao",PY_mb_diao},
        {"3464","ding",PY_mb_ding},
        {"3664","dong",PY_mb_dong},
        {"3826","duan",PY_mb_duan},
        {"3264","fang",PY_mb_fang},
        {"3364","feng",PY_mb_feng},
        {"4264","gang",PY_mb_gang},
        {"4364","geng",PY_mb_geng},
        {"4664","gong",PY_mb_gong},
        {"4824","guai",PY_mb_guai},
        {"4826","guan",PY_mb_guan},
        {"4264","hang",PY_mb_hang},
        {"4364","heng",PY_mb_heng},
        {"4664","hong",PY_mb_hong},
        {"4823","huai",PY_mb_huai},
        {"4826","huan",PY_mb_huan},
        {"5426","jian",PY_mb_jian},
        {"5426","jiao",PY_mb_jiao},
        {"5464","jing",PY_mb_jing},
        {"5826","juan",PY_mb_juan},
        {"5264","kang",PY_mb_kang},
        {"5364","keng",PY_mb_keng},
        {"5664","kong",PY_mb_kong},
        {"5824","kuai",PY_mb_kuai},
        {"5826","kuan",PY_mb_kuan},
        {"5264","lang",PY_mb_lang},
        {"5366","leng",PY_mb_leng},
        {"5426","lian",PY_mb_lian},
        {"5426","liao",PY_mb_liao},
        {"5464","ling",PY_mb_ling},
        {"5664","long",PY_mb_long},
        {"5826","luan",PY_mb_luan},
        {"6264","mang",PY_mb_mang},
        {"6364","meng",PY_mb_meng},
        {"6426","mian",PY_mb_mian},
        {"6426","miao",PY_mb_miao},
        {"6464","ming",PY_mb_ming},
        {"6264","nang",PY_mb_nang},
        {"6364","neng",PY_mb_neng},
        {"6426","nian",PY_mb_nian},
        {"6426","niao",PY_mb_niao},
        {"6464","ning",PY_mb_ning},
        {"6664","nong",PY_mb_nong},
        {"6826","nuan",PY_mb_nuan},
        {"7264","pang",PY_mb_pang},
        {"7364","peng",PY_mb_peng},
        {"7426","pian",PY_mb_pian},
        {"7426","piao",PY_mb_piao},
        {"7464","ping",PY_mb_ping},
        {"7426","qian",PY_mb_qian},
        {"7426","qiao",PY_mb_qiao},
        {"7464","qing",PY_mb_qing},
        {"7826","quan",PY_mb_quan},
        {"7264","rang",PY_mb_rang},
        {"7364","reng",PY_mb_reng},
        {"7664","rong",PY_mb_rong},
        {"7826","ruan",PY_mb_ruan},
        {"7264","sang",PY_mb_sang},
        {"7364","seng",PY_mb_seng},
        {"7424","shai",PY_mb_shai},
        {"7426","shan",PY_mb_shan},
        {"7426","shao",PY_mb_shao},
        {"7436","shen",PY_mb_shen},
        {"7468","shou",PY_mb_shou},
        {"7482","shua",PY_mb_shua},
        {"7484","shui",PY_mb_shui},
        {"7486","shun",PY_mb_shun},
        {"7486","shuo",PY_mb_shuo},
        {"7664","song",PY_mb_song},
        {"7826","suan",PY_mb_suan},
        {"8264","tang",PY_mb_tang},
        {"8364","teng",PY_mb_teng},
        {"8426","tian",PY_mb_tian},
        {"8426","tiao",PY_mb_tiao},
        {"8464","ting",PY_mb_ting},
        {"8664","tong",PY_mb_tong},
        {"8826","tuan",PY_mb_tuan},
        {"9264","wang",PY_mb_wang},
        {"9364","weng",PY_mb_weng},
        {"9426","xian",PY_mb_xiao},
        {"9426","xiao",PY_mb_xiao},
        {"9464","xing",PY_mb_xing},
        {"9826","xuan",PY_mb_xuan},
        {"9264","yang",PY_mb_yang},
        {"9464","ying",PY_mb_ying},
        {"9664","yong",PY_mb_yong},
        {"9826","yuan",PY_mb_yuan},
        {"9264","zang",PY_mb_zang},
        {"9364","zeng",PY_mb_zeng},
        {"9424","zhai",PY_mb_zhai},
        {"9426","zhan",PY_mb_zhan},
        {"9426","zhao",PY_mb_zhao},
        {"9436","zhen",PY_mb_zhen},
        {"9468","zhou",PY_mb_zhou},
        {"9482","zhua",PY_mb_zhua},
        {"9484","zhui",PY_mb_zhui},
        {"9486","zhun",PY_mb_zhun},
        {"9486","zhuo",PY_mb_zhuo},
        {"9664","zong",PY_mb_zong},
        {"9826","zuan",PY_mb_zuan},
        {"24264","chang",PY_mb_chang},
        {"24364","cheng",PY_mb_cheng},
        {"24664","chong",PY_mb_chong},
        {"24826","chuan",PY_mb_chuan},
        {"48264","guang",PY_mb_guang},
        {"48264","huang",PY_mb_huang},
        {"54264","jiang",PY_mb_jiang},
        {"54664","jiong",PY_mb_jiong},
        {"58264","kuang",PY_mb_kuang},
        {"54264","liang",PY_mb_liang},
        {"64264","niang",PY_mb_niang},
        {"74264","qiang",PY_mb_qiang},
        {"74664","qiong",PY_mb_qiong},
        {"74264","shang ",PY_mb_shang},
        {"74364","sheng",PY_mb_sheng},
        {"74824","shuai",PY_mb_shuai},
        {"74826","shuan",PY_mb_shuan},
        {"94264","xiang",PY_mb_xiang},
        {"94664","xiong",PY_mb_xiong},
        {"94264","zhang",PY_mb_zhang},
        {"94364","zheng",PY_mb_zheng},
        {"94664","zhong",PY_mb_zhong},
        {"94824","zhuai",PY_mb_zhuai},
        {"94826","zhuan",PY_mb_zhuan},
        {"248264","chuang",PY_mb_chuang},
        {"748264","shuang",PY_mb_shuang},
        {"948264","zhuang",PY_mb_zhuang},
        {NULL,NULL,NULL},
    };

#include <string.h>
    int PY_MatchHZ(const char *number, PYIdxList &idxList)
    {
        const T9PY_IDX *t9List = &t9PY_index[0];
        int ret = 0;
        while(t9List->T9)
        {
            if(strcmp(t9List->T9, number) == 0)
            {
                ret++;
                idxList.append(t9List);
            }
            t9List++;
        }
        return ret;
    }
    const T9PY_IDX *PY_MatchEN(char number)
    {
        if((number < '0') || (number > '9'))
            return NULL;
        return &t9EN_index[number - '0'];
    }
}

const QSize smallSize = QSize(167, 208);
const QSize bigSize = QSize(167*2, 208*2);
T9Widget::T9Widget(QWidget *recver, QWidget *parent)
    : QWidget(parent)
    , ui(new Ui::T9Widget)
    , msgReceiver(recver)
{
    isZoomIn = false;
    this->setMinimumSize(smallSize);
    this->setMaximumSize(smallSize);
    isMoving = false;

    currentMethod = chinese;
    maxCount = 0;
    pageCount = 0;
    currentPage = 0;
    confirmHZ = -1;

    pyMaxCount = 0;
    pyPageCount = 0;
    pyCurrentPage = 0;
    currentPY = 0;

    ui->setupUi(this);
    //ui->tipLabel->setAutoFillBackground(true);
    this->setWindowFlags(Qt::WindowStaysOnTopHint | Qt::FramelessWindowHint);
    this->installEventFilter(this);
//    this->setWindowFlags(Qt::FramelessWindowHint);
    this->setAttribute(Qt::WA_InputMethodEnabled);
    this->setFocusPolicy(Qt::NoFocus);
    this->setFocusProxy(QApplication::focusWidget());

    pyGroup = new QButtonGroup(this);
    pyGroup->addButton(ui->pyBtn0, 0);
    pyGroup->addButton(ui->pyBtn1, 1);
    pyGroup->addButton(ui->pyBtn2, 2);
    connect(pyGroup, SIGNAL(buttonClicked(int)), this, SLOT(onPyClicked(int)));

    hzGroup = new QButtonGroup(this);
    hzGroup->addButton(ui->hzBtn0, 0);
    hzGroup->addButton(ui->hzBtn1, 1);
    hzGroup->addButton(ui->hzBtn2, 2);
    hzGroup->addButton(ui->hzBtn3, 3);
    hzGroup->addButton(ui->hzBtn4, 4);
    connect(hzGroup, SIGNAL(buttonClicked(int)), this, SLOT(onHzClicked(int)));

    numberGroup = new QButtonGroup(this);
    numberGroup->addButton(ui->n0Btn, 0);
    numberGroup->addButton(ui->n1Btn, 1);
    numberGroup->addButton(ui->n2Btn, 2);
    numberGroup->addButton(ui->n3Btn, 3);
    numberGroup->addButton(ui->n4Btn, 4);
    numberGroup->addButton(ui->n5Btn, 5);
    numberGroup->addButton(ui->n6Btn, 6);
    numberGroup->addButton(ui->n7Btn, 7);
    numberGroup->addButton(ui->n8Btn, 8);
    numberGroup->addButton(ui->n9Btn, 9);

    connect(numberGroup, SIGNAL(buttonClicked(int)), this, SLOT(onNumberClicked(int)));

    QPixmap p[2][10];
    for(int i = 0; i < 10; i++)
    {
        p[0][i].loadFromData(RAWRES::numMap[i].pic, RAWRES::numMap[i].size);
        btnIcon[0][i].addPixmap(p[0][i]);
        p[1][i].loadFromData(RAWRES::sysMap[i].pic, RAWRES::sysMap[i].size);
        btnIcon[1][i].addPixmap(p[1][i]);
    }

    changeUI();
}

T9Widget::~T9Widget()
{
    delete ui;
}

void T9Widget::changeUI()
{
    if(currentMethod == english)
        ui->methodBtn->setText(tr("EN"));
    else if(currentMethod == chinese)
        ui->methodBtn->setText(tr("CH"));
    else
        ui->methodBtn->setText(tr("SyS"));
    if(currentMethod == syssymbol)
    {
        for(int i = 0; i < 10; i++)
        {
            numberGroup->button(i)->setIcon(btnIcon[1][i]);
        }
    }
    else
    {
        for(int i = 0; i < 10; i++)
        {
            numberGroup->button(i)->setIcon(btnIcon[0][i]);
        }
    }
    int i;
    for(i = 0; i < pyGroup->buttons().count(); i++)
        pyGroup->button(i)->setText("");
    for(i = 0; i < hzGroup->buttons().count(); i++)
        hzGroup->button(i)->setText("");
    inputString = "";
    //ui->tipLabel->setText(inputString);
    updateT9UI(T9Widget::ReloadNumberString);
}

void T9Widget::updateT9UI(int type)
{
    if(type & T9Widget::ReloadNumberString)
    {
        readyPYList.clear();
        confirmHZ = -1;

        currentPY = 0;
        pyCurrentPage = 0;
        pyPageCount = 0;
        if(currentMethod == english)
        {
            PCPYIDX idx = T9MAP::PY_MatchEN(inputString.toAscii().constData()[0]);
            if(idx != NULL)
                readyPYList.append(idx);
        }
        else if(currentMethod == chinese)
        {
            /*int count = */T9MAP::PY_MatchHZ(inputString.toAscii().constData() , readyPYList);
            //qDebug()<<"PY_MatchHZ "<<inputString<<" = "<<count;
        }
        pyMaxCount = readyPYList.count();
        int btnCount = pyGroup->buttons().count();
        pyPageCount = (pyMaxCount + btnCount - 1) / btnCount;
        pyCurrentPage = 0;
        currentPY = 0;
        type |= T9Widget::ReloadPinYin;
    }
    if(type & T9Widget::ReloadPinYin)
    {
        readyCharList.clear();
        maxCount = 0;
        pageCount = 0;
        currentPage = 0;
        if(currentMethod == english)
        {
            currentPY = 0;
            if(readyPYList.count() > 0)
            {
                const char *enString = (const char *)readyPYList[0]->MB;
                if(enString != NULL)
                {
                    while(*enString)
                        readyCharList.append(QString(*enString++));
                }
            }
        }
        else if(currentMethod == chinese)
        {
            int curIdx = currentPY + pyCurrentPage * pyGroup->buttons().count();
            if(curIdx < readyPYList.count())
            {
                const char *p = (const char *)readyPYList[curIdx]->MB;
                while(*p)
                {
                    readyCharList.append(QTextCodec::codecForName("GB2312")->toUnicode(p, 2));
                    p += 2;
                }
            }
        }
        maxCount = readyCharList.count();
        int btnCount = hzGroup->buttons().count();
        pageCount = (maxCount + btnCount - 1) / btnCount;
        currentPage = 0;
    }
    int i;
    ui->pyPgUp->setEnabled(pyCurrentPage > 0);
    ui->pyPgDn->setEnabled(pyCurrentPage < pyPageCount - 1);
    int pyPageOffset = pyCurrentPage * pyGroup->buttons().count();
    for(i = 0; i < pyGroup->buttons().count(); i++)
    {
        QAbstractButton *btn = pyGroup->button(i);
        QFont fnt = btn->font();
        fnt.setBold(i == currentPY);
        btn->setFont(fnt);
        if(pyPageOffset + i < pyMaxCount)
            btn->setText(readyPYList.at(pyPageOffset + i)->PY);
        else
            btn->setText("");
    }
    ui->pgUpBtn->setEnabled(currentPage > 0);
    ui->pgDnBtn->setEnabled(currentPage < pageCount - 1);
    int pageOffset = currentPage * hzGroup->buttons().count();
    for(i = 0; i < hzGroup->buttons().count(); i++)
    {
        QAbstractButton *btn = hzGroup->button(i);
        QFont fnt = btn->font();
        fnt.setBold(i == confirmHZ);
        btn->setFont(fnt);
        if(pageOffset + i < maxCount)
            btn->setText(readyCharList.at(pageOffset + i));
        else
            btn->setText("");
    }
}

void T9Widget::switchMethod()
{
    if(currentMethod == english)
        currentMethod = chinese;
    else if(currentMethod == chinese)
        currentMethod = syssymbol;
    else
        currentMethod = english;
    changeUI();
}

void T9Widget::pageUp()
{
    if(--currentPage < 0)
        currentPage = 0;
    updateT9UI();
}

void T9Widget::pageDown()
{
    if(++currentPage >= pageCount)
        currentPage = pageCount - 1;
    if(currentPage < 0)
        currentPage = 0;
    updateT9UI();
}

void T9Widget::moveLeft()
{
    int nextHZ = confirmHZ - 1;
    if(nextHZ < 0)
    {
        confirmHZ = 0;
        pageUp();
        return;
    }
    if(!hzGroup->button(nextHZ)->text().isEmpty())
    {
        confirmHZ = nextHZ;
        updateT9UI(T9Widget::ReloadUI);
    }
}

void T9Widget::moveRight()
{
    int nextHZ = confirmHZ + 1;
    int pageSize = hzGroup->buttons().count();
    if(nextHZ >= pageSize)
    {
        confirmHZ = 0;
        pageDown();
        return;
    }
    if(hzGroup->button(nextHZ)->text().isEmpty())
        nextHZ = confirmHZ;
    if(nextHZ == confirmHZ)
        return;
    if(!hzGroup->button(nextHZ)->text().isEmpty())
    {
        confirmHZ = nextHZ;
        updateT9UI(T9Widget::ReloadUI);
    }
}

void T9Widget::pyPageUp()
{
    if(--pyCurrentPage < 0)
        pyCurrentPage = 0;
    updateT9UI(T9Widget::ReloadPinYin);
}

void T9Widget::pyPageDown()
{
    if(++pyCurrentPage >= pyPageCount)
        pyCurrentPage = pyPageCount - 1;
    updateT9UI(T9Widget::ReloadPinYin);
}

void T9Widget::pyMoveLeft()
{
    int nextPY = currentPY - 1;
    if(nextPY < 0)
    {
        currentPY = 0;
        pyPageUp();
        return;
    }
    currentPY = nextPY;
    updateT9UI(T9Widget::ReloadPinYin);
}

void T9Widget::pyMoveRight()
{
    int nextPY = currentPY + 1;
    int pageSize = pyGroup->buttons().count();
    if(nextPY >= pageSize)
    {
        currentPY = 0;
        pyPageDown();
        return;
    }
    if((pageSize * pyCurrentPage + nextPY) < readyPYList.count())
    {
        currentPY = nextPY;
        updateT9UI(T9Widget::ReloadPinYin);
    }
}

void T9Widget::keyPressEvent(QKeyEvent *ev)
{
    switch(ev->key())
    {
    case '0' ... '9':
        onNumberClicked(ev->key() - '0');
        break;
    case '*':
        on_starBtn_clicked();
        break;
    case Qt::Key_F11:
        on_jingBtn_clicked();
        break;
    case Qt::Key_Escape:
        on_methodBtn_clicked();
        break;
    case Qt::Key_Backspace:
        on_backSpaceBtn_clicked();
        break;
    case Qt::Key_F12:
        on_spaceBtn_clicked();
        break;
    case Qt::Key_Enter:
        on_enterBtn_clicked();
        break;
    default:
        break;
    }
}

void T9Widget::mousePressEvent(QMouseEvent *ev)
{
    isMoving = true;
    lastPnt = ev->pos() + pos();
}

void T9Widget::mouseMoveEvent(QMouseEvent *ev)
{
    if(!isMoving)
        return;
    if((lastPnt.x() < 0) && (lastPnt.y() < 0))
        lastPnt = ev->pos();
    else
    {
        QPoint to = pos() + ev->pos() - lastPnt;
        lastPnt = ev->pos() + pos();
        move(pos() + to);
    }
}

void T9Widget::mouseReleaseEvent(QMouseEvent *ev)
{
    Q_UNUSED(ev);
    isMoving = false;
    lastPnt = QPoint(-1, -1);
}

void T9Widget::onNumberClicked(int id)
{
    if(confirmHZ >= 0)
    {
        onHzClicked(id - 1);
        return;
    }
    if(currentMethod == english)
    {
        inputString = id + '0';
    }
    else if(currentMethod == chinese)
    {
        inputString += (id + '0');
    }
    else
    {
        switch(id)
        {
        case 0:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Insert, Qt::NoModifier));
            break;
        case 1:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Home, Qt::NoModifier));
            break;
        case 2:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Up, Qt::NoModifier));
            break;
        case 3:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_PageUp, Qt::NoModifier));
            break;
        case 4:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Left, Qt::NoModifier));
            break;
        case 5:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Tab, Qt::NoModifier));
            break;
        case 6:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Right, Qt::NoModifier));
            break;
        case 7:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_End, Qt::NoModifier));
            break;
        case 8:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Down, Qt::NoModifier));
            break;
        case 9:
            QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_PageDown, Qt::NoModifier));
            break;
        }
    }
    //ui->tipLabel->setText(inputString);
    updateT9UI(T9Widget::ReloadNumberString);
}

void T9Widget::onHzClicked(int id)
{
    emit newString(hzGroup->button(id)->text());
    inputString = "";
    //ui->tipLabel->setText(inputString);
    updateT9UI(T9Widget::ReloadNumberString);
    confirmHZ = -1;
//    QCoreApplication::postEvent(eventRecver, key);
}

void T9Widget::onPyClicked(int id)
{
    if(currentMethod == chinese)
    if(id < readyPYList.count())
    {
        currentPY = id;
        updateT9UI(T9Widget::ReloadPinYin);
    }
}

void T9Widget::on_pgUpBtn_clicked()
{
    pageUp();
}

void T9Widget::on_pgDnBtn_clicked()
{
    pageDown();
}

void T9Widget::on_methodBtn_clicked()
{
    switchMethod();
}

void T9Widget::on_backSpaceBtn_clicked()
{
    if(confirmHZ >= 0)
    {
        confirmHZ = -1;
        updateT9UI();
    }
    else if(inputString.isEmpty())
        emit this->backSpace();//edited by qiujuan
        //QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Backspace, Qt::NoModifier));
    else
    {
        inputString = inputString.left(inputString.length() - 1);
        //ui->tipLabel->setText(inputString);
        updateT9UI(T9Widget::ReloadNumberString);
    }

}

void T9Widget::on_spaceBtn_clicked()
{
    if(inputString.isEmpty())
        QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Space, Qt::NoModifier));
}

void T9Widget::on_enterBtn_clicked()
{
    emit this->enter();////////////add by qiujuan
    if(inputString.isEmpty())
        QCoreApplication::postEvent(msgReceiver, new QKeyEvent(QEvent::KeyPress, Qt::Key_Enter, Qt::NoModifier));
    else if(confirmHZ < 0)
    {
        confirmHZ = 0;
        updateT9UI();
    }
    else
    {
        onHzClicked(confirmHZ);
    }
}

void T9Widget::on_starBtn_clicked()
{
    if(confirmHZ < 0)
    {
        pyMoveLeft();
    }
    else
    {
        moveLeft();
    }
}

void T9Widget::on_jingBtn_clicked()
{
    if(confirmHZ < 0)
    {
        pyMoveRight();
    }
    else
    {
        moveRight();
    }
}
#if 0
void T9Widget::on_zoomBtn_clicked()
{
    isZoomIn = !isZoomIn;
    if(this->isZoomIn)
    {
        this->setMinimumSize(bigSize);
        this->setMaximumSize(bigSize);
        this->resize(bigSize);
    }
    else
    {
        this->setMinimumSize(smallSize);
        this->setMaximumSize(smallSize);
        this->resize(smallSize);
    }
}
#endif
void T9Widget::on_pyPgUp_clicked()
{
    pyPageUp();
}

void T9Widget::on_pyPgDn_clicked()
{
    pyPageDown();
}
