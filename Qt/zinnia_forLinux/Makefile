#############################################################################
# Makefile for building: zinnia
# Generated by qmake (2.01a) (Qt 4.5.2) on: ?? 3? 10 01:08:52 2011
# Project:  zinnia.pro
# Template: app
# Command: /usr/local/Trolltech/QtEmbedded-4.5.2-arm/bin/armqmake -unix -o Makefile zinnia.pro
#############################################################################

####### Compiler, tools and options

CC            = arm-linux-gcc
CXX           = arm-linux-g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/qws/linux-arm-g++ -I. -I/usr/local/Trolltech/QtEmbedded-4.5.2-arm/include/QtCore -I/usr/local/Trolltech/QtEmbedded-4.5.2-arm/include/QtNetwork -I/usr/local/Trolltech/QtEmbedded-4.5.2-arm/include/QtGui -I/usr/local/Trolltech/QtEmbedded-4.5.2-arm/include -I.
LINK          = arm-linux-g++
LFLAGS        = -Wl,-O1 -Wl,-rpath,/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib
LIBS          = $(SUBLIBS)  -L/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib -lQtGui -L/usr/local/tslib/lib -L/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib -lts -lQtNetwork -lQtCore -lm -lrt -ldl -lpthread
AR            = arm-linux-ar cqs
RANLIB        = 
QMAKE         = /usr/local/Trolltech/QtEmbedded-4.5.2-arm/bin/armqmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		trainer.cpp \
		svm.cpp \
		sexp.cpp \
		recognizer.cpp \
		param.cpp \
		libzinnia.cpp \
		feature.cpp \
		character.cpp \
		QHWR.cpp moc_QHWR.cpp
OBJECTS       = main.o \
		trainer.o \
		svm.o \
		sexp.o \
		recognizer.o \
		param.o \
		libzinnia.o \
		feature.o \
		character.o \
		QHWR.o \
		moc_QHWR.o
DIST          = /usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/g++.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/unix.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/linux.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/qws.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/qconfig.pri \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/release.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/moc.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/resources.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/uic.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/lex.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/include_source_dir.prf \
		zinnia.pro
QMAKE_TARGET  = zinnia
DESTDIR       = 
TARGET        = zinnia

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: zinnia.pro  /usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/qws/linux-arm-g++/qmake.conf /usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/g++.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/unix.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/linux.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/qws.conf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/qconfig.pri \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/release.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/moc.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/resources.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/uic.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/lex.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/include_source_dir.prf \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib/libQtGui.prl \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib/libQtNetwork.prl \
		/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile zinnia.pro
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/g++.conf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/unix.conf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/linux.conf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/common/qws.conf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/qconfig.pri:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt_functions.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt_config.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/exclusive_builds.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/default_pre.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/release.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/default_post.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/warn_on.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/qt.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/unix/thread.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/moc.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/resources.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/uic.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/yacc.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/lex.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/mkspecs/features/include_source_dir.prf:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib/libQtGui.prl:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib/libQtNetwork.prl:
/usr/local/Trolltech/QtEmbedded-4.5.2-arm/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile zinnia.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/zinnia1.0.0 || $(MKDIR) .tmp/zinnia1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/zinnia1.0.0/ && $(COPY_FILE) --parents zinnia.h svm.h sexp.h scoped_ptr.h param.h mmap.h feature.h config.h common.h stream_wrapper.h freelist.h QHWR.h .tmp/zinnia1.0.0/ && $(COPY_FILE) --parents main.cpp trainer.cpp svm.cpp sexp.cpp recognizer.cpp param.cpp libzinnia.cpp feature.cpp character.cpp QHWR.cpp .tmp/zinnia1.0.0/ && (cd `dirname .tmp/zinnia1.0.0` && $(TAR) zinnia1.0.0.tar zinnia1.0.0 && $(COMPRESS) zinnia1.0.0.tar) && $(MOVE) `dirname .tmp/zinnia1.0.0`/zinnia1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/zinnia1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_QHWR.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_QHWR.cpp
moc_QHWR.cpp: zinnia.h \
		QHWR.h
	/usr/local/Trolltech/QtEmbedded-4.5.2-arm/bin/moc $(DEFINES) $(INCPATH) QHWR.h -o moc_QHWR.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp QHWR.h \
		zinnia.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

trainer.o: trainer.cpp scoped_ptr.h \
		common.h \
		config.h \
		svm.h \
		mmap.h \
		feature.h \
		zinnia.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o trainer.o trainer.cpp

svm.o: svm.cpp feature.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o svm.o svm.cpp

sexp.o: sexp.cpp sexp.h \
		freelist.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sexp.o sexp.cpp

recognizer.o: recognizer.cpp config.h \
		common.h \
		mmap.h \
		zinnia.h \
		feature.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o recognizer.o recognizer.cpp

param.o: param.cpp param.h \
		scoped_ptr.h \
		common.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o param.o param.cpp

libzinnia.o: libzinnia.cpp param.h \
		scoped_ptr.h \
		common.h \
		config.h \
		zinnia.h \
		stream_wrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o libzinnia.o libzinnia.cpp

feature.o: feature.cpp zinnia.h \
		feature.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o feature.o feature.cpp

character.o: character.cpp common.h \
		config.h \
		zinnia.h \
		sexp.h \
		freelist.h \
		scoped_ptr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o character.o character.cpp

QHWR.o: QHWR.cpp QHWR.h \
		zinnia.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QHWR.o QHWR.cpp

moc_QHWR.o: moc_QHWR.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_QHWR.o moc_QHWR.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

